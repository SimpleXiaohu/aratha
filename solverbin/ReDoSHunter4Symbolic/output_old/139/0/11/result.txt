Vulnerable
Attack String :"Lightning/0.0"+"0"*10000+" "
prefix :SmtNode{intersectionRegexes=[((Lightning)\/(\d+)\.)(\d+)]}
prefix : (re.++  (re.++  (re.++  (str.to.re "\x4c") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x67") (re.++  (str.to.re "\x68") (re.++  (str.to.re "\x74") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6e")  (str.to.re "\x67"))))))))) (re.++  (str.to.re "\x5c\x2f") (re.++ (re.+ (re.range "0" "9") )  (str.to.re "\x5c\x2e")))) (re.+ (re.range "0" "9") ))
infix :SmtNode{intersectionRegexes=[(\d+)(\d*), (\d+)(\.?)(\d*)]}
infix :(re.inter  (re.++ (re.+ (re.range "0" "9") ) (re.* (re.range "0" "9") ))  (re.++ (re.+ (re.range "0" "9") ) (re.++ (re.opt  (str.to.re "\x5c\x2e") ) (re.* (re.range "0" "9") ))) )
suffix :SmtNode{intersectionRegexes=[0[\s\S]*＆～(((\d*)＆[\s\S]{1,}))]}
suffix : (re.inter  (re.++  (str.to.re "\x30") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp  (re.inter (re.* (re.range "0" "9") )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))))