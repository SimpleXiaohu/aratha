Vulnerable
Attack String :"HbbTV/1.1.1"+"CE-HTML/1.0;THOM"*5000+"\n◎!;\n◎!\n;\n◎!;\n◎!\n;"
prefix :SmtNode{intersectionRegexes=[HbbTV/1.1.1]}
prefix : (re.++  (str.to.re "\x48") (re.++  (str.to.re "\x62") (re.++  (str.to.re "\x62") (re.++  (str.to.re "\x54") (re.++  (str.to.re "\x56") (re.++  (str.to.re "\x2f") (re.++  (str.to.re "\x31") (re.++ re.allchar (re.++  (str.to.re "\x31") (re.++ re.allchar  (str.to.re "\x31")))))))))))
infix :SmtNode{intersectionRegexes=[(.*)([^;]*), (.*)(CE-HTML\/1\.\d;(Vendor\/)*THOM)([^;]*)]}
infix :(re.inter  (re.++ (re.* re.allchar ) (re.*  (str.to.re "\x3b") ))  (re.++ (re.* re.allchar ) (re.++  (re.++  (str.to.re "\x43") (re.++  (str.to.re "\x45") (re.++  (str.to.re "\x2d") (re.++  (str.to.re "\x48") (re.++  (str.to.re "\x54") (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x4c") (re.++  (str.to.re "\x5c\x2f") (re.++  (str.to.re "\x31") (re.++  (str.to.re "\x5c\x2e") (re.++ (re.range "0" "9") (re.++  (str.to.re "\x3b") (re.++ (re.*  (re.++  (str.to.re "\x56") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x72")  (str.to.re "\x5c\x2f"))))))) ) (re.++  (str.to.re "\x54") (re.++  (str.to.re "\x48") (re.++  (str.to.re "\x4f")  (str.to.re "\x4d"))))))))))))))))) (re.*  (str.to.re "\x3b") ))) )
suffix :SmtNode{intersectionRegexes=[
◎!;
◎!
;
◎!;
◎!
;]}
suffix : (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x25ce") (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x3b") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x25ce") (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x3b") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x25ce") (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x3b") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x25ce") (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x0a")  (str.to.re "\x3b"))))))))))))))))))