Vulnerable
Attack String :"philpodder/0.0"+"0\u0000"*5000+" "
prefix :SmtNode{intersectionRegexes=[((philpodder)\/(\d+)\.)(\d+)]}
prefix : (re.++  (re.++  (re.++  (str.to.re "\x70") (re.++  (str.to.re "\x68") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x70") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x65")  (str.to.re "\x72")))))))))) (re.++  (str.to.re "\x5c\x2f") (re.++ (re.+ (re.range "0" "9") )  (str.to.re "\x5c\x2e")))) (re.+ (re.range "0" "9") ))
infix :SmtNode{intersectionRegexes=[(\d+)([^\s.]+), (\d+)(\.?)([^\s.]+)]}
infix :(re.inter  (re.++ (re.+ (re.range "0" "9") ) (re.+  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x2e")) ))  (re.++ (re.+ (re.range "0" "9") ) (re.++ (re.opt  (str.to.re "\x5c\x2e") ) (re.+  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x2e")) ))) )
suffix :SmtNode{intersectionRegexes=[00[\s\S]*＆～([^\s.]+), 00[\s\S]*＆～(([^\s.]+)(\.?([^\s.]+)?))]}
suffix :(re.inter  (re.inter  (re.++  (str.to.re "\x30") (re.++  (str.to.re "\x30") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))) (re.comp (re.+  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x2e")) )))  (re.inter  (re.++  (str.to.re "\x30") (re.++  (str.to.re "\x30") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))) (re.comp  (re.++ (re.+  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x2e")) )  (re.++ (re.opt  (str.to.re "\x5c\x2e") ) (re.opt (re.+  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x2e")) ) ))))) )