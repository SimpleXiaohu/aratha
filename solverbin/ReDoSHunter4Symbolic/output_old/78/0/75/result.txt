Vulnerable
Attack String :"WPDesktop;NOKIA; "+" "*20000+";A;"
prefix :SmtNode{intersectionRegexes=[((Windows Phone [^;]+; .*IEMobile\/[^;\)]+[;\)]|WPDesktop;) ?(ARM; ?Touch; ?|Touch; ?)?(NOKIA|Nokia)[^;]*;)((( *)ï¼†[\s\S]{1,}))]}
prefix : (re.++  (re.++  (re.union  (re.++  (str.to.re "\x57") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x77") (re.++  (str.to.re "\x73") (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x68") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x20") (re.++ (re.+  (str.to.re "\x3b") ) (re.++  (str.to.re "\x3b") (re.++  (str.to.re "\x20") (re.++ (re.* re.allchar ) (re.++  (str.to.re "\x49") (re.++  (str.to.re "\x45") (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x62") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x5c\x2f") (re.++ (re.+  (re.union  (str.to.re "\x3b")  (str.to.re "\x5c\x29")) )  (re.union  (str.to.re "\x3b")  (str.to.re "\x5c\x29"))))))))))))))))))))))))))))))  (re.++  (str.to.re "\x57") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x44") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x73") (re.++  (str.to.re "\x6b") (re.++  (str.to.re "\x74") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x70")  (str.to.re "\x3b"))))))))))) (re.++ (re.opt  (str.to.re "\x20") ) (re.++ (re.opt  (re.union  (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x52") (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x3b") (re.++ (re.opt  (str.to.re "\x20") ) (re.++  (str.to.re "\x54") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x75") (re.++  (str.to.re "\x63") (re.++  (str.to.re "\x68") (re.++  (str.to.re "\x3b") (re.opt  (str.to.re "\x20") ))))))))))))  (re.++  (str.to.re "\x54") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x75") (re.++  (str.to.re "\x63") (re.++  (str.to.re "\x68") (re.++  (str.to.re "\x3b") (re.opt  (str.to.re "\x20") )))))))) ) (re.++  (re.union  (re.++  (str.to.re "\x4e") (re.++  (str.to.re "\x4f") (re.++  (str.to.re "\x4b") (re.++  (str.to.re "\x49")  (str.to.re "\x41")))))  (re.++  (str.to.re "\x4e") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6b") (re.++  (str.to.re "\x69")  (str.to.re "\x61")))))) (re.++ (re.*  (str.to.re "\x3b") )  (str.to.re "\x3b"))))))  (re.inter (re.*  (str.to.re "\x20") )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))))
infix :SmtNode{intersectionRegexes=[ *, ( *)((NOKIA ?|Nokia ?|LUMIA ?|[Ll]umia ?)*)([^;\)]+), [^;\)]+]}
infix :(re.inter (re.*  (str.to.re "\x20") )  (re.++ (re.*  (str.to.re "\x20") ) (re.++ (re.*  (re.union  (re.++  (str.to.re "\x4e") (re.++  (str.to.re "\x4f") (re.++  (str.to.re "\x4b") (re.++  (str.to.re "\x49") (re.++  (str.to.re "\x41") (re.opt  (str.to.re "\x20") )))))) (re.union  (re.++  (str.to.re "\x4e") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6b") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x61") (re.opt  (str.to.re "\x20") )))))) (re.union  (re.++  (str.to.re "\x4c") (re.++  (str.to.re "\x55") (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x49") (re.++  (str.to.re "\x41") (re.opt  (str.to.re "\x20") ))))))  (re.++  (re.union  (str.to.re "\x4c")  (str.to.re "\x6c")) (re.++  (str.to.re "\x75") (re.++  (str.to.re "\x6d") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x61") (re.opt  (str.to.re "\x20") ))))))))) ) (re.+  (re.union  (str.to.re "\x3b")  (str.to.re "\x5c\x29")) ))) (re.+  (re.union  (str.to.re "\x3b")  (str.to.re "\x5c\x29")) ) )
suffix :SmtNode{intersectionRegexes=[;A;]}
suffix : (re.++  (str.to.re "\x3b") (re.++  (str.to.re "\x41")  (str.to.re "\x3b")))