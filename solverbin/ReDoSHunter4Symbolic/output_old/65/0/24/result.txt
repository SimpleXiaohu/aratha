Vulnerable
Attack String :";SAMSUNG "+"SAMSUNG  "*2010+""
prefix :SmtNode{intersectionRegexes=[(; *)((SAMSUNG[ \-_] *)+)]}
prefix : (re.++  (re.++  (str.to.re "\x3b") (re.*  (str.to.re "\x20") )) (re.+  (re.++  (str.to.re "\x53") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x53") (re.++  (str.to.re "\x55") (re.++  (str.to.re "\x4e") (re.++  (str.to.re "\x47") (re.++  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x2d")  (str.to.re "\x5f"))) (re.*  (str.to.re "\x20") ))))))))) ))
infix :SmtNode{intersectionRegexes=[(SAMSUNG[ \-_] *)+, ((SAMSUNG[ \-_] *)+)([^\/;]+), [^\/;]+]}
infix :(re.inter (re.+  (re.++  (str.to.re "\x53") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x53") (re.++  (str.to.re "\x55") (re.++  (str.to.re "\x4e") (re.++  (str.to.re "\x47") (re.++  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x2d")  (str.to.re "\x5f"))) (re.*  (str.to.re "\x20") ))))))))) )  (re.++ (re.+  (re.++  (str.to.re "\x53") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x53") (re.++  (str.to.re "\x55") (re.++  (str.to.re "\x4e") (re.++  (str.to.re "\x47") (re.++  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x2d")  (str.to.re "\x5f"))) (re.*  (str.to.re "\x20") ))))))))) ) (re.+  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) )) (re.+  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) ) )
suffix :SmtNode{intersectionRegexes=[]}
suffix :