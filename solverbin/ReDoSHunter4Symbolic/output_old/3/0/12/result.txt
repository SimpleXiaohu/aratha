Vulnerable
Attack String :"-\t+ "+"\t\t"*10000+"A~A\nA~A\n"
prefix :SmtNode{intersectionRegexes=[(([0-9\-a-z]+)[ \t]+([\/+0-9A-Za-z]+[=]*))([ \n\t]+)]}
prefix : (re.++  (re.++ (re.+  (re.union (re.range "\x30" "\x39") (re.union  (str.to.re "\x5c\x2d") (re.range "\x61" "\x7a"))) ) (re.++ (re.+  (re.union  (str.to.re "\x20")  (str.to.re "\x5c\x74")) )  (re.++ (re.+  (re.union  (str.to.re "\x5c\x2f") (re.union  (str.to.re "\x2b") (re.union (re.range "\x30" "\x39") (re.union (re.range "\x41" "\x5a") (re.range "\x61" "\x7a"))))) ) (re.*  (str.to.re "\x3d") )))) (re.+  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x6e")  (str.to.re "\x5c\x74"))) ))
infix :SmtNode{intersectionRegexes=[(( |
|	)+)&((( |
|	)+)()([^
]+))&([^
]+)&(.+)]}
infix : (re.++ (re.+  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x0a")  (str.to.re "\x09"))) ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.+  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x0a")  (str.to.re "\x09"))) ) (re.++  (re.+  (str.to.re "\x0a") ))) (re.++  (str.to.re "\x26") (re.++ (re.+  (str.to.re "\x0a") ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[A~A
A~A
]}
suffix : (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x7e") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x7e") (re.++  (str.to.re "\x41")  (str.to.re "\x0a"))))))))