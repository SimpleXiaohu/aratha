Vulnerable
Attack String :"iPod"+"\u0000Version/0.0"*5000+"\n1\n"
prefix :SmtNode{intersectionRegexes=[iPod]}
prefix : (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x6f")  (str.to.re "\x64"))))
infix :SmtNode{intersectionRegexes=[(([^
]+)([0-9]+))&(([^
]+)(Version\/([0-9]+)\.)([0-9]+))&(.+)]}
infix : (re.++  (re.++ (re.+  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.+ (re.range "\x30" "\x39") )) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.+  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (re.++  (str.to.re "\x56") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x73") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x5c\x2f") (re.++ (re.+ (re.range "\x30" "\x39") )  (str.to.re "\x5c\x2e")))))))))) (re.+ (re.range "\x30" "\x39") ))) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))
suffix :SmtNode{intersectionRegexes=[
1
]}
suffix : (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x31")  (str.to.re "\x0a")))