Vulnerable
Attack String :"- "+"\t "*5000+"\r"
prefix :SmtNode{intersectionRegexes=[(([0-9\-a-z]+))([ \t]+)]}
prefix : (re.++ (re.+  (re.union (re.range "\x30" "\x39") (re.union  (str.to.re "\x5c\x2d") (re.range "\x61" "\x7a"))) ) (re.+  (re.union  (str.to.re "\x20")  (str.to.re "\x5c\x74")) ))
infix :SmtNode{intersectionRegexes=[([ \t]+)([ \n\/\t+0-9A-Za-z]+), ([ \t]+)([ \n\/\t+0-9A-Za-z]+)]}
infix :(re.inter  (re.++ (re.+  (re.union  (str.to.re "\x20")  (str.to.re "\x5c\x74")) ) (re.+  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x6e") (re.union  (str.to.re "\x5c\x2f") (re.union  (str.to.re "\x5c\x74") (re.union  (str.to.re "\x2b") (re.union (re.range "\x30" "\x39") (re.union (re.range "\x41" "\x5a") (re.range "\x61" "\x7a")))))))) ))  (re.++ (re.+  (re.union  (str.to.re "\x20")  (str.to.re "\x5c\x74")) ) (re.+  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x6e") (re.union  (str.to.re "\x5c\x2f") (re.union  (str.to.re "\x5c\x74") (re.union  (str.to.re "\x2b") (re.union (re.range "\x30" "\x39") (re.union (re.range "\x41" "\x5a") (re.range "\x61" "\x7a")))))))) )) )
suffix :SmtNode{intersectionRegexes=[		[\s\S]*＆～([ \n\/\t+0-9A-Za-z]+), 		[\s\S]*＆～(([ \n\/\t+0-9A-Za-z]+)([=]*(.*)))]}
suffix :(re.inter  (re.inter  (re.++  (str.to.re "\x09") (re.++  (str.to.re "\x09") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))) (re.comp (re.+  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x6e") (re.union  (str.to.re "\x5c\x2f") (re.union  (str.to.re "\x5c\x74") (re.union  (str.to.re "\x2b") (re.union (re.range "\x30" "\x39") (re.union (re.range "\x41" "\x5a") (re.range "\x61" "\x7a")))))))) )))  (re.inter  (re.++  (str.to.re "\x09") (re.++  (str.to.re "\x09") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))) (re.comp  (re.++ (re.+  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x6e") (re.union  (str.to.re "\x5c\x2f") (re.union  (str.to.re "\x5c\x74") (re.union  (str.to.re "\x2b") (re.union (re.range "\x30" "\x39") (re.union (re.range "\x41" "\x5a") (re.range "\x61" "\x7a")))))))) )  (re.++ (re.*  (str.to.re "\x3d") ) (re.* re.allchar ))))) )