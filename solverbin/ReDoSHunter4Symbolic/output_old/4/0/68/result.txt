Vulnerable
Attack String :"-\t\t="+"="*20000+"\n"
prefix :SmtNode{intersectionRegexes=[(([0-9\-a-z]+)[ \t]+[ \n\/\t+0-9A-Za-z]+)((([=]*)＆[\s\S]{1,}))]}
prefix : (re.++  (re.++ (re.+  (re.union (re.range "\x30" "\x39") (re.union  (str.to.re "\x5c\x2d") (re.range "\x61" "\x7a"))) ) (re.++ (re.+  (re.union  (str.to.re "\x20")  (str.to.re "\x5c\x74")) ) (re.+  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x6e") (re.union  (str.to.re "\x5c\x2f") (re.union  (str.to.re "\x5c\x74") (re.union  (str.to.re "\x2b") (re.union (re.range "\x30" "\x39") (re.union (re.range "\x41" "\x5a") (re.range "\x61" "\x7a")))))))) )))  (re.inter (re.*  (str.to.re "\x3d") )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))))
infix :SmtNode{intersectionRegexes=[((=)*)&(((=)*)()([^
]*))&([^
]*)&(.+)]}
infix : (re.++ (re.*  (str.to.re "\x3d") ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.*  (str.to.re "\x3d") ) (re.++  (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ))) (re.++  (str.to.re "\x26") (re.++ (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[～(((.*)＆[\s\S]{1,}))]}
suffix :