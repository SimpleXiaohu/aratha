Vulnerable
Attack String :""+"00"*5000+"\r"
prefix :SmtNode{intersectionRegexes=[]}
prefix :
infix :SmtNode{intersectionRegexes=[(\d+)(\d+), (\d+)(\.?)(\d+)]}
infix :(re.inter  (re.++ (re.+ (re.range "0" "9") ) (re.+ (re.range "0" "9") ))  (re.++ (re.+ (re.range "0" "9") ) (re.++ (re.opt  (str.to.re "\x5c\x2e") ) (re.+ (re.range "0" "9") ))) )
suffix :SmtNode{intersectionRegexes=[00[\s\S]*＆～(\d+), 00[\s\S]*＆～((\d+)( *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|wks?|w|years?|yrs?|y)?))]}
suffix :(re.inter  (re.inter  (re.++  (str.to.re "\x30") (re.++  (str.to.re "\x30") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))) (re.comp (re.+ (re.range "0" "9") )))  (re.inter  (re.++  (str.to.re "\x30") (re.++  (str.to.re "\x30") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))) (re.comp  (re.++ (re.+ (re.range "0" "9") )  (re.++ (re.*  (str.to.re "\x20") ) (re.opt  (re.union  (re.++  (str.to.re "\x6d") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x73") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x63") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x64") (re.opt  (str.to.re "\x73") )))))))))))) (re.union  (re.++  (str.to.re "\x6d") (re.++  (str.to.re "\x73") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x63") (re.opt  (str.to.re "\x73") ))))) (re.union  (re.++  (str.to.re "\x6d")  (str.to.re "\x73")) (re.union  (re.++  (str.to.re "\x73") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x63") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x64") (re.opt  (str.to.re "\x73") ))))))) (re.union  (re.++  (str.to.re "\x73") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x63") (re.opt  (str.to.re "\x73") )))) (re.union  (str.to.re "\x73") (re.union  (re.++  (str.to.re "\x6d") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x75") (re.++  (str.to.re "\x74") (re.++  (str.to.re "\x65") (re.opt  (str.to.re "\x73") ))))))) (re.union  (re.++  (str.to.re "\x6d") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6e") (re.opt  (str.to.re "\x73") )))) (re.union  (str.to.re "\x6d") (re.union  (re.++  (str.to.re "\x68") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x75") (re.++  (str.to.re "\x72") (re.opt  (str.to.re "\x73") ))))) (re.union  (re.++  (str.to.re "\x68") (re.++  (str.to.re "\x72") (re.opt  (str.to.re "\x73") ))) (re.union  (str.to.re "\x68") (re.union  (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x79") (re.opt  (str.to.re "\x73") )))) (re.union  (str.to.re "\x64") (re.union  (re.++  (str.to.re "\x77") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x6b") (re.opt  (str.to.re "\x73") ))))) (re.union  (re.++  (str.to.re "\x77") (re.++  (str.to.re "\x6b") (re.opt  (str.to.re "\x73") ))) (re.union  (str.to.re "\x77") (re.union  (re.++  (str.to.re "\x79") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x72") (re.opt  (str.to.re "\x73") ))))) (re.union  (re.++  (str.to.re "\x79") (re.++  (str.to.re "\x72") (re.opt  (str.to.re "\x73") )))  (str.to.re "\x79")))))))))))))))))))) ))))) )