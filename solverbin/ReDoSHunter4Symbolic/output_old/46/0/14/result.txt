Vulnerable
Attack String :"CPU OS 0.0.0"+"0"*20000+""
prefix :SmtNode{intersectionRegexes=[((CPU[ +]OS|iPhone[ +]OS|CPU[ +]iPhone)[ +]+(\d+)[\._](\d+)[\._])(\d+)]}
prefix : (re.++  (re.++  (re.union  (re.++  (str.to.re "\x43") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x55") (re.++  (re.union  (str.to.re "\x20")  (str.to.re "\x2b")) (re.++  (str.to.re "\x4f")  (str.to.re "\x53")))))) (re.union  (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x68") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x65") (re.++  (re.union  (str.to.re "\x20")  (str.to.re "\x2b")) (re.++  (str.to.re "\x4f")  (str.to.re "\x53")))))))))  (re.++  (str.to.re "\x43") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x55") (re.++  (re.union  (str.to.re "\x20")  (str.to.re "\x2b")) (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x68") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6e")  (str.to.re "\x65")))))))))))) (re.++ (re.+  (re.union  (str.to.re "\x20")  (str.to.re "\x2b")) ) (re.++ (re.+ (re.range "0" "9") ) (re.++  (re.union  (str.to.re "\x5c\x2e")  (str.to.re "\x5f")) (re.++ (re.+ (re.range "0" "9") )  (re.union  (str.to.re "\x5c\x2e")  (str.to.re "\x5f"))))))) (re.+ (re.range "0" "9") ))
infix :SmtNode{intersectionRegexes=[(([0-9]+)([^
]*))&(([0-9]+)()([^
]*))&(.+)]}
infix : (re.++  (re.++ (re.+ (re.range "\x30" "\x39") ) (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) )) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.+ (re.range "\x30" "\x39") ) (re.++  (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ))) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))
suffix :SmtNode{intersectionRegexes=[]}
suffix :