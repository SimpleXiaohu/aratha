Vulnerable
Attack String :"0"+"00"*5000+" "
prefix :SmtNode{intersectionRegexes=[((\+|-)?)(\d+)]}
prefix : (re.++ (re.opt  (re.union  (str.to.re "\x5c\x2b")  (str.to.re "\x2d")) ) (re.+ (re.range "0" "9") ))
infix :SmtNode{intersectionRegexes=[(([0-9]+)([0-9]+))&(([0-9]+)((E|e)?((\+|\-))?)([0-9]+))&(.+)]}
infix : (re.++  (re.++ (re.+ (re.range "\x30" "\x39") ) (re.+ (re.range "\x30" "\x39") )) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.+ (re.range "\x30" "\x39") ) (re.++  (re.++ (re.opt  (re.union  (str.to.re "\x45")  (str.to.re "\x65")) ) (re.opt  (re.union  (str.to.re "\x5c\x2b")  (str.to.re "\x5c\x2d")) )) (re.+ (re.range "\x30" "\x39") ))) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))
suffix :SmtNode{intersectionRegexes=[00[\s\S]*＆～(\d+)]}
suffix : (re.inter  (re.++  (str.to.re "\x30") (re.++  (str.to.re "\x30") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))) (re.comp (re.+ (re.range "0" "9") )))