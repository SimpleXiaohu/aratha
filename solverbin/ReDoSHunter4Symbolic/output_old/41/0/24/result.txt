Vulnerable
Attack String :"iPad; "+"CPUOS 0_0_0"*5000+"@"
prefix :SmtNode{intersectionRegexes=[((iPod|iPod touch|iPhone|iPad);)(((.*)ï¼†[\s\S]{1,}))]}
prefix : (re.++  (re.++  (re.union  (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x6f")  (str.to.re "\x64")))) (re.union  (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x74") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x75") (re.++  (str.to.re "\x63")  (str.to.re "\x68")))))))))) (re.union  (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x68") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6e")  (str.to.re "\x65"))))))  (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x61")  (str.to.re "\x64")))))))  (str.to.re "\x3b"))  (re.inter (re.* re.allchar )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))))
infix :SmtNode{intersectionRegexes=[(([^
]*)([0-9]+))&(([^
]*)(CPU[^
]*OS( |\+)([0-9]+)_([0-9]+)_)([0-9]+))&(.+)]}
infix : (re.++  (re.++ (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.+ (re.range "\x30" "\x39") )) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (re.++  (str.to.re "\x43") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x55") (re.++ (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (str.to.re "\x4f") (re.++  (str.to.re "\x53") (re.++  (re.union  (str.to.re "\x20")  (str.to.re "\x5c\x2b")) (re.++ (re.+ (re.range "\x30" "\x39") ) (re.++  (str.to.re "\x5f") (re.++ (re.+ (re.range "\x30" "\x39") )  (str.to.re "\x5f"))))))))))) (re.+ (re.range "\x30" "\x39") ))) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))
suffix :SmtNode{intersectionRegexes=[@]}
suffix : (str.to.re "\x40")