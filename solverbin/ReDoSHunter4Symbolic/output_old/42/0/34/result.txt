Vulnerable
Attack String :"(iPad;\u0000Version/0.0"+"0"*20000+""
prefix :SmtNode{intersectionRegexes=[(\(iPad;.+(Version)\/(\d+)\.)(\d+)]}
prefix : (re.++  (re.++  (str.to.re "\x5c\x28") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x3b") (re.++ (re.+ re.allchar ) (re.++  (re.++  (str.to.re "\x56") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x73") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6f")  (str.to.re "\x6e"))))))) (re.++  (str.to.re "\x5c\x2f") (re.++ (re.+ (re.range "0" "9") )  (str.to.re "\x5c\x2e"))))))))))) (re.+ (re.range "0" "9") ))
infix :SmtNode{intersectionRegexes=[([0-9]+)&(([0-9]+)((\.([0-9]+))?)([^
]*))&([^
]*)&(.+)]}
infix : (re.++ (re.+ (re.range "\x30" "\x39") ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.+ (re.range "\x30" "\x39") ) (re.++ (re.opt  (re.++  (str.to.re "\x5c\x2e") (re.+ (re.range "\x30" "\x39") )) ) (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ))) (re.++  (str.to.re "\x26") (re.++ (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[]}
suffix :