Vulnerable
Attack String :"Windows Phone A; IEMobile/A;LG;"+" "*20000+";\n;◎;\n;◎;"
prefix :SmtNode{intersectionRegexes=[Windows Phone A; IEMobile/A;LG;]}
prefix : (re.++  (str.to.re "\x57") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x77") (re.++  (str.to.re "\x73") (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x68") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x3b") (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x49") (re.++  (str.to.re "\x45") (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x62") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x2f") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x3b") (re.++  (str.to.re "\x4c") (re.++  (str.to.re "\x47")  (str.to.re "\x3b")))))))))))))))))))))))))))))))
infix :SmtNode{intersectionRegexes=[( *)&(( *)((LG( |\-))?)([^;,\)]+))&([^;,\)]+)&(.+)]}
infix : (re.++ (re.*  (str.to.re "\x20") ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.*  (str.to.re "\x20") ) (re.++ (re.opt  (re.++  (str.to.re "\x4c") (re.++  (str.to.re "\x47")  (re.union  (str.to.re "\x20")  (str.to.re "\x5c\x2d")))) ) (re.+  (re.union  (str.to.re "\x3b") (re.union  (str.to.re "\x2c")  (str.to.re "\x5c\x29"))) ))) (re.++  (str.to.re "\x26") (re.++ (re.+  (re.union  (str.to.re "\x3b") (re.union  (str.to.re "\x2c")  (str.to.re "\x5c\x29"))) ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[;
;◎;
;◎;]}
suffix : (re.++  (str.to.re "\x3b") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x3b") (re.++  (str.to.re "\x25ce") (re.++  (str.to.re "\x3b") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x3b") (re.++  (str.to.re "\x25ce")  (str.to.re "\x3b")))))))))