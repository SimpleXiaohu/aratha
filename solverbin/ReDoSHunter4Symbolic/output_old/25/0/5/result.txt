Vulnerable
Attack String :"LG Player 1."+"0\u0000"*5000+" "
prefix :SmtNode{intersectionRegexes=[LG Player 1.]}
prefix : (re.++  (str.to.re "\x4c") (re.++  (str.to.re "\x47") (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x79") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x31") re.allchar)))))))))))
infix :SmtNode{intersectionRegexes=[(([0-9]+)([^ 
	\.]+))&(([0-9]+)(\.?)([^ 
	\.]+))&(.+)]}
infix : (re.++  (re.++ (re.+ (re.range "\x30" "\x39") ) (re.+  (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x0a") (re.union  (str.to.re "\x0d") (re.union  (str.to.re "\x09") (re.union  (str.to.re "\x0b")  (str.to.re "\x5c\x2e"))))))) )) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.+ (re.range "\x30" "\x39") ) (re.++ (re.opt  (str.to.re "\x5c\x2e") ) (re.+  (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x0a") (re.union  (str.to.re "\x0d") (re.union  (str.to.re "\x09") (re.union  (str.to.re "\x0b")  (str.to.re "\x5c\x2e"))))))) ))) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))
suffix :SmtNode{intersectionRegexes=[00[\s\S]*＆～([^\s.]+), 00[\s\S]*＆～(([^\s.]+)(\.?([^\s.]+)?))]}
suffix :(re.inter  (re.inter  (re.++  (str.to.re "\x30") (re.++  (str.to.re "\x30") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))) (re.comp (re.+  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x2e")) )))  (re.inter  (re.++  (str.to.re "\x30") (re.++  (str.to.re "\x30") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))) (re.comp  (re.++ (re.+  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x2e")) )  (re.++ (re.opt  (str.to.re "\x5c\x2e") ) (re.opt (re.+  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x2e")) ) ))))) )