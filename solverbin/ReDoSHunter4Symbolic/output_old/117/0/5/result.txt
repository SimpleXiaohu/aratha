Vulnerable
Attack String :"\\d"+"dd"*10000+" "
prefix :SmtNode{intersectionRegexes=[(\\)(d+)]}
prefix : (re.++  (str.to.re "\x5c\x5c") (re.+  (str.to.re "\x64") ))
infix :SmtNode{intersectionRegexes=[(d+)&((d+)()(([A-Z]|[a-z])+))&(([A-Z]|[a-z])+)&(.+)]}
infix : (re.++ (re.+  (str.to.re "\x64") ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.+  (str.to.re "\x64") ) (re.++  (re.+  (re.union (re.range "\x41" "\x5a") (re.range "\x61" "\x7a")) ))) (re.++  (str.to.re "\x26") (re.++ (re.+  (re.union (re.range "\x41" "\x5a") (re.range "\x61" "\x7a")) ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[dd[\s\S]*＆～([A-Za-z]+)]}
suffix : (re.inter  (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x64") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))) (re.comp (re.+  (re.union (re.range "\x41" "\x5a") (re.range "\x61" "\x7a")) )))