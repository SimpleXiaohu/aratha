Vulnerable
Attack String :"version/"+".."*5000+"~\n~\n"
prefix :SmtNode{intersectionRegexes=[version/]}
prefix : (re.++  (str.to.re "\x76") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x73") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6e")  (str.to.re "\x2f"))))))))
infix :SmtNode{intersectionRegexes=[((\.|[A-Za-z0-9_])+)&(((\.|[A-Za-z0-9_])+)()([^
]+))&([^
]+)&(.+)]}
infix : (re.++ (re.+  (re.union  (str.to.re "\x5c\x2e")  (re.union (re.range "\x41" "\x5a") (re.union (re.range "\x61" "\x7a") (re.union (re.range "\x30" "\x39")  (str.to.re "\x5f"))))) ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.+  (re.union  (str.to.re "\x5c\x2e")  (re.union (re.range "\x41" "\x5a") (re.union (re.range "\x61" "\x7a") (re.union (re.range "\x30" "\x39")  (str.to.re "\x5f"))))) ) (re.++  (re.+  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ))) (re.++  (str.to.re "\x26") (re.++ (re.+  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[~
~
]}
suffix : (re.++  (str.to.re "\x7e") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x7e")  (str.to.re "\x0a"))))