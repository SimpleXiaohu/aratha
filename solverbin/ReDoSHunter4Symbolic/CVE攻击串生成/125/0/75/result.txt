Vulnerable
Attack String :"" "+"\u000b"*5000+"\u0000"
prefix :SmtNode{intersectionRegexes=[(")(((\s*)ÔºÜ[\s\S]{1,}))]}
prefix : (re.++  (str.to.re "\x22")  (re.inter (re.* (re.union (re.range "\t" "\t") (re.range "\n" "\n") (re.range "\r" "\r") (str.to.re " ")) )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))))
infix :SmtNode{intersectionRegexes=[(([ 
	]*)([ 
	]*))&(([ 
	]*)((((|[-]|||[-])|!|([#-\[])|([\]-~])|([¬†-Ìüø]|[Ô§Ä-Ô∑è]|[Ô∑∞-ÔøØ]))|(\\(([-]|||[-	])|([¬†-Ìüø]|[Ô§Ä-Ô∑è]|[Ô∑∞-ÔøØ])))))([ 
	]*))&(.+)]}
infix : (re.++  (re.++ (re.*  (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x0a") (re.union  (str.to.re "\x0d") (re.union  (str.to.re "\x09")  (str.to.re "\x0b")))))) ) (re.*  (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x0a") (re.union  (str.to.re "\x0d") (re.union  (str.to.re "\x09")  (str.to.re "\x0b")))))) )) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.*  (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x0a") (re.union  (str.to.re "\x0d") (re.union  (str.to.re "\x09")  (str.to.re "\x0b")))))) ) (re.++  (re.union  (re.union  (re.union  (str.to.re "\x7f") (re.union (re.range "\x0e" "\x1f") (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x0b") (re.range "\x01" "\x08"))))) (re.union  (str.to.re "\x21") (re.union (re.range "\x23" "\x5c\x5b") (re.union (re.range "\x5c\x5d" "\x7e")  (re.union (re.range "\xa0" "\xd7ff") (re.union (re.range "\xf900" "\xfdcf") (re.range "\xfdf0" "\xffef")))))))  (re.++  (str.to.re "\x5c\x5c")  (re.union  (re.union (re.range "\x0d" "\x7f") (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x0b") (re.range "\x01" "\x09"))))  (re.union (re.range "\xa0" "\xd7ff") (re.union (re.range "\xf900" "\xfdcf") (re.range "\xfdf0" "\xffef")))))) (re.*  (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x0a") (re.union  (str.to.re "\x0d") (re.union  (str.to.re "\x09")  (str.to.re "\x0b")))))) ))) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))
suffix :SmtNode{intersectionRegexes=[[\s\S]*ÔºÜÔΩû(((\s*)ÔºÜ[\s\S]{1,})), [\s\S]*ÔºÜÔΩû((((\s*)ÔºÜ[\s\S]{1,}))("))]}
suffix :(re.inter  (re.inter  (re.++  (str.to.re "\x0b") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp  (re.inter (re.* (re.union (re.range "\t" "\t") (re.range "\n" "\n") (re.range "\r" "\r") (str.to.re " ")) )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))))  (re.inter  (re.++  (str.to.re "\x0b") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp  (re.++  (re.inter (re.* (re.union (re.range "\t" "\t") (re.range "\n" "\n") (re.range "\r" "\r") (str.to.re " ")) )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))  (str.to.re "\x22")))) )