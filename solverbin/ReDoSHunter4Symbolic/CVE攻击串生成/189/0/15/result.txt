Vulnerable
Attack String :"a"+"\t\t"*5000+"\r"
prefix :SmtNode{intersectionRegexes=[a]}
prefix : (str.to.re "\x61")
infix :SmtNode{intersectionRegexes=[((( |	)+)(( |
|\/|	|\+|[0-9]|[A-Z]|[a-z])+))&((( |	)+)()(( |
|\/|	|\+|[0-9]|[A-Z]|[a-z])+))&(.+)]}
infix : (re.++  (re.++ (re.+  (re.union  (str.to.re "\x20")  (str.to.re "\x09")) ) (re.+  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x0a") (re.union  (str.to.re "\x5c\x2f") (re.union  (str.to.re "\x09") (re.union  (str.to.re "\x5c\x2b") (re.union (re.range "\x30" "\x39") (re.union (re.range "\x41" "\x5a") (re.range "\x61" "\x7a")))))))) )) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.+  (re.union  (str.to.re "\x20")  (str.to.re "\x09")) ) (re.++  (re.+  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x0a") (re.union  (str.to.re "\x5c\x2f") (re.union  (str.to.re "\x09") (re.union  (str.to.re "\x5c\x2b") (re.union (re.range "\x30" "\x39") (re.union (re.range "\x41" "\x5a") (re.range "\x61" "\x7a")))))))) ))) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))
suffix :SmtNode{intersectionRegexes=[		[\s\S]*＆～([ \n\/\t+0-9A-Za-z]+), 		[\s\S]*＆～(([ \n\/\t+0-9A-Za-z]+)([=]*(.*)))]}
suffix :(re.inter  (re.inter  (re.++  (str.to.re "\x09") (re.++  (str.to.re "\x09") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))) (re.comp (re.+  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x6e") (re.union  (str.to.re "\x5c\x2f") (re.union  (str.to.re "\x5c\x74") (re.union  (str.to.re "\x2b") (re.union (re.range "\x30" "\x39") (re.union (re.range "\x41" "\x5a") (re.range "\x61" "\x7a")))))))) )))  (re.inter  (re.++  (str.to.re "\x09") (re.++  (str.to.re "\x09") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))) (re.comp  (re.++ (re.+  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x6e") (re.union  (str.to.re "\x5c\x2f") (re.union  (str.to.re "\x5c\x74") (re.union  (str.to.re "\x2b") (re.union (re.range "\x30" "\x39") (re.union (re.range "\x41" "\x5a") (re.range "\x61" "\x7a")))))))) )  (re.++ (re.*  (str.to.re "\x3d") ) (re.* re.allchar ))))) )