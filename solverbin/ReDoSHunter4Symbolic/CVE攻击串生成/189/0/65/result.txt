Vulnerable
Attack String :"a\tA"+"="*20000+"\r"
prefix :SmtNode{intersectionRegexes=[a	A]}
prefix : (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x09")  (str.to.re "\x41")))
infix :SmtNode{intersectionRegexes=[((=)*)&(((=)*)()([^
]*))&([^
]*)&(.+)]}
infix : (re.++ (re.*  (str.to.re "\x3d") ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.*  (str.to.re "\x3d") ) (re.++  (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ))) (re.++  (str.to.re "\x26") (re.++ (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[=[\s\S]*＆～(((.*)＆[\s\S]{1,}))]}
suffix : (re.inter  (re.++  (str.to.re "\x3d") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp  (re.inter (re.* re.allchar )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))))