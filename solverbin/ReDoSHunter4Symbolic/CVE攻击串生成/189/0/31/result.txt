Vulnerable
Attack String :"a\t"+" "*5000+"A~A\nA~A\n"
prefix :SmtNode{intersectionRegexes=[a	]}
prefix : (re.++  (str.to.re "\x61")  (str.to.re "\x09"))
infix :SmtNode{intersectionRegexes=[([ \n\/\t+0-9A-Za-z]+)(.*), ([ \n\/\t+0-9A-Za-z]+)([=]*)(.*)]}
infix :(re.inter  (re.++ (re.+  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x6e") (re.union  (str.to.re "\x5c\x2f") (re.union  (str.to.re "\x5c\x74") (re.union  (str.to.re "\x2b") (re.union (re.range "\x30" "\x39") (re.union (re.range "\x41" "\x5a") (re.range "\x61" "\x7a")))))))) ) (re.* re.allchar ))  (re.++ (re.+  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x6e") (re.union  (str.to.re "\x5c\x2f") (re.union  (str.to.re "\x5c\x74") (re.union  (str.to.re "\x2b") (re.union (re.range "\x30" "\x39") (re.union (re.range "\x41" "\x5a") (re.range "\x61" "\x7a")))))))) ) (re.++ (re.*  (str.to.re "\x3d") ) (re.* re.allchar ))) )
suffix :SmtNode{intersectionRegexes=[A~A
A~A
]}
suffix : (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x7e") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x7e") (re.++  (str.to.re "\x41")  (str.to.re "\x0a"))))))))