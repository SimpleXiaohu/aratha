Vulnerable
Attack String :"iPod;"+"CPUOS 0"*5000+" "
prefix :SmtNode{intersectionRegexes=[iPod;]}
prefix : (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x64")  (str.to.re "\x3b")))))
infix :SmtNode{intersectionRegexes=[(.*)(\d+), (.*)(CPU.*OS )(\d+)]}
infix :(re.inter  (re.++ (re.* re.allchar ) (re.+ (re.range "0" "9") ))  (re.++ (re.* re.allchar ) (re.++  (re.++  (str.to.re "\x43") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x55") (re.++ (re.* re.allchar ) (re.++  (str.to.re "\x4f") (re.++  (str.to.re "\x53")  (str.to.re "\x20"))))))) (re.+ (re.range "0" "9") ))) )
suffix :SmtNode{intersectionRegexes=[CPUOS 0[\s\S]*＆～(\d+), CPUOS 0[\s\S]*＆～((\d+)(_(\d+)(_(\d+))?.*Mobile))]}
suffix :(re.inter  (re.inter  (re.++  (str.to.re "\x43") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x55") (re.++  (str.to.re "\x4f") (re.++  (str.to.re "\x53") (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x30") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))))))) (re.comp (re.+ (re.range "0" "9") )))  (re.inter  (re.++  (str.to.re "\x43") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x55") (re.++  (str.to.re "\x4f") (re.++  (str.to.re "\x53") (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x30") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))))))) (re.comp  (re.++ (re.+ (re.range "0" "9") )  (re.++  (str.to.re "\x5f") (re.++ (re.+ (re.range "0" "9") ) (re.++ (re.opt  (re.++  (str.to.re "\x5f") (re.+ (re.range "0" "9") )) ) (re.++ (re.* re.allchar ) (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x62") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6c")  (str.to.re "\x65"))))))))))))) )