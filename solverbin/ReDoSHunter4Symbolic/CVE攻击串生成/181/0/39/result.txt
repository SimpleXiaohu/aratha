Vulnerable
Attack String :"<1 "+"""\u0000"*16+"!◎"◎'◎>"'!◎"◎'◎>"'!"
prefix :SmtNode{intersectionRegexes=[<1 ]}
prefix : (re.++  (str.to.re "\x3c") (re.++  (str.to.re "\x31")  (str.to.re "\x20")))
infix :SmtNode{intersectionRegexes=[()&(.{0,})], next=SmtNode{intersectionRegexes=[(('[^']*'|\"[^\"]*\")+('[^']*'|[^>])+)&(('[^']*'|[^>])+)&(\".*)&(.{0,})], next=SmtNode{intersectionRegexes=[]}}}
infix : (re.++  (re.++  (str.to.re "\x26")  (re.++ "" (re.* "" ))))  (re.++  (re.++ (re.+  (re.union  (re.++  (str.to.re "\x27") (re.++ (re.*  (str.to.re "\x27") )  (str.to.re "\x27")))  (re.++  (str.to.re "\x5c\x22") (re.++ (re.*  (str.to.re "\x5c\x22") )  (str.to.re "\x5c\x22")))) ) (re.+  (re.union  (re.++  (str.to.re "\x27") (re.++ (re.*  (str.to.re "\x27") )  (str.to.re "\x27")))  (str.to.re "\x3e")) )) (re.++  (str.to.re "\x26") (re.++ (re.+  (re.union  (re.++  (str.to.re "\x27") (re.++ (re.*  (str.to.re "\x27") )  (str.to.re "\x27")))  (str.to.re "\x3e")) ) (re.++  (str.to.re "\x26") (re.++  (re.++  (str.to.re "\x5c\x22") (re.* re.allchar )) (re.++  (str.to.re "\x26")  (re.++ "" (re.* "" )))))))) 
suffix :SmtNode{intersectionRegexes=[!◎"◎'◎>"'!◎"◎'◎>"'!]}
suffix : (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x25ce") (re.++  (str.to.re "\x22") (re.++  (str.to.re "\x25ce") (re.++  (str.to.re "\x27") (re.++  (str.to.re "\x25ce") (re.++  (str.to.re "\x3e") (re.++  (str.to.re "\x22") (re.++  (str.to.re "\x27") (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x25ce") (re.++  (str.to.re "\x22") (re.++  (str.to.re "\x25ce") (re.++  (str.to.re "\x27") (re.++  (str.to.re "\x25ce") (re.++  (str.to.re "\x3e") (re.++  (str.to.re "\x22") (re.++  (str.to.re "\x27")  (str.to.re "\x21")))))))))))))))))))