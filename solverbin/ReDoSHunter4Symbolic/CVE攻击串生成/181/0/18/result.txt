Vulnerable
Attack String :"<1 "+"""''"*16+"> "
prefix :SmtNode{intersectionRegexes=[<1 ]}
prefix : (re.++  (str.to.re "\x3c") (re.++  (str.to.re "\x31")  (str.to.re "\x20")))
infix :SmtNode{intersectionRegexes=[()&(.{0,})], next=SmtNode{intersectionRegexes=[('[^']*'|"[^"]*")+('[^']*'|[^>])+, ('[^']*'|"[^"]*")+, ".*], next=SmtNode{intersectionRegexes=[]}}}
infix : (re.++  (re.++  (str.to.re "\x26")  (re.++ "" (re.* "" )))) (re.inter  (re.++ (re.+  (re.union  (re.++  (str.to.re "\x27") (re.++ (re.*  (str.to.re "\x27") )  (str.to.re "\x27")))  (re.++  (str.to.re "\x22") (re.++ (re.*  (str.to.re "\x22") )  (str.to.re "\x22")))) ) (re.+  (re.union  (re.++  (str.to.re "\x27") (re.++ (re.*  (str.to.re "\x27") )  (str.to.re "\x27")))  (str.to.re "\x3e")) )) (re.+  (re.union  (re.++  (str.to.re "\x27") (re.++ (re.*  (str.to.re "\x27") )  (str.to.re "\x27")))  (re.++  (str.to.re "\x22") (re.++ (re.*  (str.to.re "\x22") )  (str.to.re "\x22")))) )  (re.++  (str.to.re "\x22") (re.* re.allchar )) ) 
suffix :SmtNode{intersectionRegexes=[""""[\s\S]*＆～(("[^"]*"|'[^']*'|[^>])+), """"[\s\S]*＆～((("[^"]*"|'[^']*'|[^>])+)((\/)?>))]}
suffix :(re.inter  (re.inter  (re.++  (str.to.re "\x22") (re.++  (str.to.re "\x22") (re.++  (str.to.re "\x22") (re.++  (str.to.re "\x22") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))))) (re.comp (re.+  (re.union  (re.++  (str.to.re "\x22") (re.++ (re.*  (str.to.re "\x22") )  (str.to.re "\x22"))) (re.union  (re.++  (str.to.re "\x27") (re.++ (re.*  (str.to.re "\x27") )  (str.to.re "\x27")))  (str.to.re "\x3e"))) )))  (re.inter  (re.++  (str.to.re "\x22") (re.++  (str.to.re "\x22") (re.++  (str.to.re "\x22") (re.++  (str.to.re "\x22") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))))) (re.comp  (re.++ (re.+  (re.union  (re.++  (str.to.re "\x22") (re.++ (re.*  (str.to.re "\x22") )  (str.to.re "\x22"))) (re.union  (re.++  (str.to.re "\x27") (re.++ (re.*  (str.to.re "\x27") )  (str.to.re "\x27")))  (str.to.re "\x3e"))) )  (re.++ (re.opt  (str.to.re "\x5c\x2f") )  (str.to.re "\x3e"))))) )