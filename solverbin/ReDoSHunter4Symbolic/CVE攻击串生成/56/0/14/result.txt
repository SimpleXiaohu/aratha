Vulnerable
Attack String :"1"+"0000000_"*1024+" "
prefix :SmtNode{intersectionRegexes=[1]}
prefix : (str.to.re "\x31")
infix :SmtNode{intersectionRegexes=[], next=SmtNode{intersectionRegexes=[\d+, \d+], next=SmtNode{intersectionRegexes=[_], next=SmtNode{intersectionRegexes=[]}}}}
infix : (re.inter (re.+ (re.range "0" "9") ) (re.+ (re.range "0" "9") ) )  (str.to.re "\x5f") 
suffix :SmtNode{intersectionRegexes=[11_[\s\S]*＆～(\d+(_\d+)*), 11_[\s\S]*＆～((\d+(_\d+)*)((e[+\-]?\d+)?))]}
suffix :(re.inter  (re.inter  (re.++  (str.to.re "\x31") (re.++  (str.to.re "\x31") (re.++  (str.to.re "\x5f") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))) (re.comp  (re.++ (re.+ (re.range "0" "9") ) (re.*  (re.++  (str.to.re "\x5f") (re.+ (re.range "0" "9") )) ))))  (re.inter  (re.++  (str.to.re "\x31") (re.++  (str.to.re "\x31") (re.++  (str.to.re "\x5f") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))) (re.comp  (re.++  (re.++ (re.+ (re.range "0" "9") ) (re.*  (re.++  (str.to.re "\x5f") (re.+ (re.range "0" "9") )) )) (re.opt  (re.++  (str.to.re "\x65") (re.++ (re.opt  (re.union  (str.to.re "\x2b")  (str.to.re "\x5c\x2d")) ) (re.+ (re.range "0" "9") ))) )))) )