Vulnerable
Attack String :"Java1.1."+"0"*5000+" "
prefix :SmtNode{intersectionRegexes=[Java1.1.]}
prefix : (re.++  (str.to.re "\x4a") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x76") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x31") (re.++ re.allchar (re.++  (str.to.re "\x31") re.allchar)))))))
infix :SmtNode{intersectionRegexes=[\d+, (\d+)([\-_]*)(([0-9A-Za-z]+)*), ([0-9A-Za-z]+)*]}
infix :(re.inter (re.+ (re.range "0" "9") )  (re.++ (re.+ (re.range "0" "9") ) (re.++ (re.*  (re.union  (str.to.re "\x5c\x2d")  (str.to.re "\x5f")) ) (re.* (re.+  (re.union (re.range "\x30" "\x39") (re.union (re.range "\x41" "\x5a") (re.range "\x61" "\x7a"))) ) ))) (re.* (re.+  (re.union (re.range "\x30" "\x39") (re.union (re.range "\x41" "\x5a") (re.range "\x61" "\x7a"))) ) ) )
suffix :SmtNode{intersectionRegexes=[0[\s\S]*＆～(((([0-9A-Za-z]+)*)＆[\s\S]{1,}))]}
suffix : (re.inter  (re.++  (str.to.re "\x30") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp  (re.inter (re.* (re.+  (re.union (re.range "\x30" "\x39") (re.union (re.range "\x41" "\x5a") (re.range "\x61" "\x7a"))) ) )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))))