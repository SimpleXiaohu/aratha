Vulnerable
Attack String :"SCH- "+"0"*10000+" "
prefix :SmtNode{intersectionRegexes=[((SCH)\-)([ 0-9A-Za-z]+)]}
prefix : (re.++  (re.++  (re.++  (str.to.re "\x53") (re.++  (str.to.re "\x43")  (str.to.re "\x48")))  (str.to.re "\x5c\x2d")) (re.+  (re.union  (str.to.re "\x20") (re.union (re.range "\x30" "\x39") (re.union (re.range "\x41" "\x5a") (re.range "\x61" "\x7a")))) ))
infix :SmtNode{intersectionRegexes=[(( |[0-9]|[A-Z]|[a-z])+)&((( |[0-9]|[A-Z]|[a-z])+)(\/?)([^ ]*))&([^ ]*)&(.+)]}
infix : (re.++ (re.+  (re.union  (str.to.re "\x20") (re.union (re.range "\x30" "\x39") (re.union (re.range "\x41" "\x5a") (re.range "\x61" "\x7a")))) ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.+  (re.union  (str.to.re "\x20") (re.union (re.range "\x30" "\x39") (re.union (re.range "\x41" "\x5a") (re.range "\x61" "\x7a")))) ) (re.++ (re.opt  (str.to.re "\x5c\x2f") ) (re.*  (str.to.re "\x20") ))) (re.++  (str.to.re "\x26") (re.++ (re.*  (str.to.re "\x20") ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[0[\s\S]*＆～((([^ ]*)＆[\s\S]{1,})), 0[\s\S]*＆～(((([^ ]*)＆[\s\S]{1,}))( Build))]}
suffix :(re.inter  (re.inter  (re.++  (str.to.re "\x30") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp  (re.inter (re.*  (str.to.re "\x20") )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))))  (re.inter  (re.++  (str.to.re "\x30") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp  (re.++  (re.inter (re.*  (str.to.re "\x20") )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))  (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x42") (re.++  (str.to.re "\x75") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6c")  (str.to.re "\x64"))))))))) )