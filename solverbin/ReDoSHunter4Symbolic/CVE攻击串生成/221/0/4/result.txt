Vulnerable
Attack String :"BonEcho/0.0"+"00"*10000+"!"
prefix :SmtNode{intersectionRegexes=[((BonEcho)\/(\d+)\.)(\d+)]}
prefix : (re.++  (re.++  (re.++  (str.to.re "\x42") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x45") (re.++  (str.to.re "\x63") (re.++  (str.to.re "\x68")  (str.to.re "\x6f"))))))) (re.++  (str.to.re "\x5c\x2f") (re.++ (re.+ (re.range "0" "9") )  (str.to.re "\x5c\x2e")))) (re.+ (re.range "0" "9") ))
infix :SmtNode{intersectionRegexes=[([0-9]+)&(([0-9]+)(\.?(a|b)?)([0-9]+))&([0-9]+)&(.+)]}
infix : (re.++ (re.+ (re.range "\x30" "\x39") ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.+ (re.range "\x30" "\x39") ) (re.++  (re.++ (re.opt  (str.to.re "\x5c\x2e") ) (re.opt  (re.union  (str.to.re "\x61")  (str.to.re "\x62")) )) (re.+ (re.range "\x30" "\x39") ))) (re.++  (str.to.re "\x26") (re.++ (re.+ (re.range "\x30" "\x39") ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[!]}
suffix : (str.to.re "\x21")