Vulnerable
Attack String :"; "+"SAMSUNG  "*1510+"@"
prefix :SmtNode{intersectionRegexes=[(;)((( *)ï¼†[\s\S]{1,}))]}
prefix : (re.++  (str.to.re "\x3b")  (re.inter (re.*  (str.to.re "\x20") )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))))
infix :SmtNode{intersectionRegexes=[(SAMSUNG[ \-_] *)+, ((SAMSUNG[ \-_] *)+)([^\/;]+), [^\/;]+]}
infix :(re.inter (re.+  (re.++  (str.to.re "\x53") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x53") (re.++  (str.to.re "\x55") (re.++  (str.to.re "\x4e") (re.++  (str.to.re "\x47") (re.++  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x2d")  (str.to.re "\x5f"))) (re.*  (str.to.re "\x20") ))))))))) )  (re.++ (re.+  (re.++  (str.to.re "\x53") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x53") (re.++  (str.to.re "\x55") (re.++  (str.to.re "\x4e") (re.++  (str.to.re "\x47") (re.++  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x2d")  (str.to.re "\x5f"))) (re.*  (str.to.re "\x20") ))))))))) ) (re.+  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) )) (re.+  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) ) )
suffix :SmtNode{intersectionRegexes=[@]}
suffix : (str.to.re "\x40")