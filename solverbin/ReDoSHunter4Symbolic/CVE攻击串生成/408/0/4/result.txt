Vulnerable
Attack String :"Linux 0.0"+"0"*10000+""
prefix :SmtNode{intersectionRegexes=[((Linux)[ \/](\d+)\.)(\d+)]}
prefix : (re.++  (re.++  (re.++  (str.to.re "\x4c") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x75")  (str.to.re "\x78"))))) (re.++  (re.union  (str.to.re "\x20")  (str.to.re "\x5c\x2f")) (re.++ (re.+ (re.range "0" "9") )  (str.to.re "\x5c\x2e")))) (re.+ (re.range "0" "9") ))
infix :SmtNode{intersectionRegexes=[([0-9]+)&(([0-9]+)(((\.([0-9]+))?))([^
]*))&([^
]*)&(.+)]}
infix : (re.++ (re.+ (re.range "\x30" "\x39") ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.+ (re.range "\x30" "\x39") ) (re.++ (re.opt  (re.++  (str.to.re "\x5c\x2e") (re.+ (re.range "\x30" "\x39") )) ) (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ))) (re.++  (str.to.re "\x26") (re.++ (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[]}
suffix :