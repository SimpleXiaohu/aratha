Vulnerable
Attack String :"data:/;"+";"*10000+"\u0000"
prefix :SmtNode{intersectionRegexes=[(data:(\w*\/\w*))(((;*)＆[\s\S]{1,}))]}
prefix : (re.++  (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x74") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x3a")  (re.++ (re.* (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re "_")) ) (re.++  (str.to.re "\x5c\x2f") (re.* (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re "_")) ))))))))  (re.inter (re.*  (str.to.re "\x3b") )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))))
infix :SmtNode{intersectionRegexes=[((;*)(;*))&((;*)((charset=([A-Za-z0-9_]|=|\-)*)*)(;*))&(.+)]}
infix : (re.++  (re.++ (re.*  (str.to.re "\x3b") ) (re.*  (str.to.re "\x3b") )) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.*  (str.to.re "\x3b") ) (re.++ (re.*  (re.++  (str.to.re "\x63") (re.++  (str.to.re "\x68") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x73") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x74") (re.++  (str.to.re "\x3d") (re.*  (re.union  (re.union (re.range "\x41" "\x5a") (re.union (re.range "\x61" "\x7a") (re.union (re.range "\x30" "\x39")  (str.to.re "\x5f")))) (re.union  (str.to.re "\x3d")  (str.to.re "\x5c\x2d"))) ))))))))) ) (re.*  (str.to.re "\x3b") ))) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))
suffix :SmtNode{intersectionRegexes=[;[\s\S]*＆～(((;*)＆[\s\S]{1,}))]}
suffix : (re.inter  (re.++  (str.to.re "\x3b") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp  (re.inter (re.*  (str.to.re "\x3b") )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))))