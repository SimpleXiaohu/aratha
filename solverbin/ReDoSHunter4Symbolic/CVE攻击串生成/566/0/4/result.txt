Vulnerable
Attack String :"Opera/\u0000"+"\u0000Opera Mobi\u0000"*5000+"!1!"
prefix :SmtNode{intersectionRegexes=[((Opera)\/)(.+)]}
prefix : (re.++  (re.++  (re.++  (str.to.re "\x4f") (re.++  (str.to.re "\x70") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x72")  (str.to.re "\x61")))))  (str.to.re "\x5c\x2f")) (re.+ re.allchar ))
infix :SmtNode{intersectionRegexes=[([^
]+)&(([^
]+)(Opera Mobi)([^
]+))&([^
]+)&(.+)]}
infix : (re.++ (re.+  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.+  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (re.++  (str.to.re "\x4f") (re.++  (str.to.re "\x70") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x62")  (str.to.re "\x69")))))))))) (re.+  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ))) (re.++  (str.to.re "\x26") (re.++ (re.+  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[!1!]}
suffix : (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x31")  (str.to.re "\x21")))