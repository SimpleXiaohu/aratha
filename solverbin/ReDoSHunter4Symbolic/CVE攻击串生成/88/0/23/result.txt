Vulnerable
Attack String :"android"+"\tmipad "*5000+"\u0000"
prefix :SmtNode{intersectionRegexes=[android]}
prefix : (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x69")  (str.to.re "\x64")))))))
infix :SmtNode{intersectionRegexes=[.+, (.+)(mi[\-\s_]*(pad)[\s_]?)([\s\w]+), [\s\w]+]}
infix :(re.inter (re.+ re.allchar )  (re.++ (re.+ re.allchar ) (re.++  (re.++  (str.to.re "\x6d") (re.++  (str.to.re "\x69") (re.++ (re.*  (re.union  (str.to.re "\x5c\x2d") (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x5f"))) ) (re.++  (re.++  (str.to.re "\x70") (re.++  (str.to.re "\x61")  (str.to.re "\x64"))) (re.opt  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x5f")) ))))) (re.+  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re "_"))) ))) (re.+  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re "_"))) ) )
suffix :SmtNode{intersectionRegexes=[	mipad [\s\S]*＆～([\s\w]+), 	mipad [\s\S]*＆～(([\s\w]+)((\s+build|\))))]}
suffix :(re.inter  (re.inter  (re.++  (str.to.re "\x09") (re.++  (str.to.re "\x6d") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x70") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x20") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))))))) (re.comp (re.+  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re "_"))) )))  (re.inter  (re.++  (str.to.re "\x09") (re.++  (str.to.re "\x6d") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x70") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x20") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))))))) (re.comp  (re.++ (re.+  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re "_"))) )  (re.union  (re.++ (re.+ (re.union (re.range "\t" "\t") (re.range "\n" "\n") (re.range "\r" "\r") (str.to.re " ")) ) (re.++  (str.to.re "\x62") (re.++  (str.to.re "\x75") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6c")  (str.to.re "\x64"))))))  (str.to.re "\x5c\x29"))))) )