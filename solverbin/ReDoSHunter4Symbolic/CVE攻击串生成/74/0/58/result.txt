Vulnerable
Attack String :"android"+"\u0000/\tBNT"*5000+"! !"
prefix :SmtNode{intersectionRegexes=[android]}
prefix : (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x69")  (str.to.re "\x64")))))))
infix :SmtNode{intersectionRegexes=[.+, (.+)([\/;]\s+(Barnes[&\s]+Noble\s+|BN[RT])V?)(.*), .*]}
infix :(re.inter (re.+ re.allchar )  (re.++ (re.+ re.allchar ) (re.++  (re.++  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) (re.++ (re.+ (re.union (re.range "\t" "\t") (re.range "\n" "\n") (re.range "\r" "\r") (str.to.re " ")) ) (re.++  (re.union  (re.++  (str.to.re "\x42") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x73") (re.++ (re.+  (re.union  (str.to.re "\x26") (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))) ) (re.++  (str.to.re "\x4e") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x62") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x65") (re.+ (re.union (re.range "\t" "\t") (re.range "\n" "\n") (re.range "\r" "\r") (str.to.re " ")) )))))))))))))  (re.++  (str.to.re "\x42") (re.++  (str.to.re "\x4e")  (re.union  (str.to.re "\x52")  (str.to.re "\x54"))))) (re.opt  (str.to.re "\x56") )))) (re.* re.allchar ))) (re.* re.allchar ) )
suffix :SmtNode{intersectionRegexes=[! !]}
suffix : (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x20")  (str.to.re "\x21")))