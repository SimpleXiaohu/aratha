Vulnerable
Attack String :"-\t+ "+"\t "*5000+"\nA\n"
prefix :SmtNode{intersectionRegexes=[(([0-9\-a-z]+)[ \t]+([\/+0-9A-Za-z]+[=]*))([ \n\t]+)]}
prefix : (re.++  (re.++ (re.+  (re.union (re.range "\x30" "\x39") (re.union  (str.to.re "\x5c\x2d") (re.range "\x61" "\x7a"))) ) (re.++ (re.+  (re.union  (str.to.re "\x20")  (str.to.re "\x5c\x74")) )  (re.++ (re.+  (re.union  (str.to.re "\x5c\x2f") (re.union  (str.to.re "\x2b") (re.union (re.range "\x30" "\x39") (re.union (re.range "\x41" "\x5a") (re.range "\x61" "\x7a"))))) ) (re.*  (str.to.re "\x3d") )))) (re.+  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x6e")  (str.to.re "\x5c\x74"))) ))
infix :SmtNode{intersectionRegexes=[[ \n\t]+, ([ \n\t]+)([^\n]+), [^\n]+]}
infix :(re.inter (re.+  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x6e")  (str.to.re "\x5c\x74"))) )  (re.++ (re.+  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x6e")  (str.to.re "\x5c\x74"))) ) (re.+  (str.to.re "\x5c\x6e") )) (re.+  (str.to.re "\x5c\x6e") ) )
suffix :SmtNode{intersectionRegexes=[
A
]}
suffix : (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x41")  (str.to.re "\x0a")))