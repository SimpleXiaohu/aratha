Vulnerable
Attack String :"CFNetwork/ "+" Darwin/0(Mac0,0"*5000+"!1!"
prefix :SmtNode{intersectionRegexes=[(CFNetwork\/)(((.*)ï¼†[\s\S]{1,}))]}
prefix : (re.++  (re.++  (str.to.re "\x43") (re.++  (str.to.re "\x46") (re.++  (str.to.re "\x4e") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x74") (re.++  (str.to.re "\x77") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x6b")  (str.to.re "\x5c\x2f"))))))))))  (re.inter (re.* re.allchar )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))))
infix :SmtNode{intersectionRegexes=[(.*)(\d+), (.*)( Darwin\/\d.*\(((Mac|iMac|PowerMac|PowerBook)[^\d]*)(\d+)(,|%2C))(\d+)]}
infix :(re.inter  (re.++ (re.* re.allchar ) (re.+ (re.range "0" "9") ))  (re.++ (re.* re.allchar ) (re.++  (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x44") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x77") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x5c\x2f") (re.++ (re.range "0" "9") (re.++ (re.* re.allchar ) (re.++  (str.to.re "\x5c\x28") (re.++  (re.++  (re.union  (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x61")  (str.to.re "\x63"))) (re.union  (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x61")  (str.to.re "\x63")))) (re.union  (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x77") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x61")  (str.to.re "\x63"))))))))  (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x77") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x42") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6f")  (str.to.re "\x6b")))))))))))) (re.* (re.range "0" "9") )) (re.++ (re.+ (re.range "0" "9") )  (re.union  (str.to.re "\x2c")  (re.++  (str.to.re "\x25") (re.++  (str.to.re "\x32")  (str.to.re "\x43"))))))))))))))))) (re.+ (re.range "0" "9") ))) )
suffix :SmtNode{intersectionRegexes=[!1!]}
suffix : (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x31")  (str.to.re "\x21")))