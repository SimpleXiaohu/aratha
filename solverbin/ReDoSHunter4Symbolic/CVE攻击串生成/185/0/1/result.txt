Vulnerable
Attack String :"1"+"1"*10000+" "
prefix :SmtNode{intersectionRegexes=[((\-|\+)?)([1-9]+)]}
prefix : (re.++ (re.opt  (re.union  (str.to.re "\x5c\x2d")  (str.to.re "\x5c\x2b")) ) (re.+ (re.range "\x31" "\x39") ))
infix :SmtNode{intersectionRegexes=[([1-9]+)([0-9]*), ([1-9]+)([0-9]*)]}
infix :(re.inter  (re.++ (re.+ (re.range "\x31" "\x39") ) (re.* (re.range "\x30" "\x39") ))  (re.++ (re.+ (re.range "\x31" "\x39") ) (re.* (re.range "\x30" "\x39") )) )
suffix :SmtNode{intersectionRegexes=[1[\s\S]*＆～((([0-9]*)＆[\s\S]{1,}))]}
suffix : (re.inter  (re.++  (str.to.re "\x31") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp  (re.inter (re.* (re.range "\x30" "\x39") )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))))