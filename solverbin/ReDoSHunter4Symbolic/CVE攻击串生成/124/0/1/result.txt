Vulnerable
Attack String :""!"+"\u000b"*1024+" "
prefix :SmtNode{intersectionRegexes=[(")(\s*(([--]|!|[#-\[]|[\]-~])|(\\[--	])))]}
prefix : (re.++  (str.to.re "\x22")  (re.++ (re.* (re.union (re.range "\t" "\t") (re.range "\n" "\n") (re.range "\r" "\r") (str.to.re " ")) )  (re.union  (re.union  (re.union  (str.to.re "\x7f") (re.union (re.range "\x0e" "\x1f") (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x0b") (re.range "\x01" "\x08"))))) (re.union  (str.to.re "\x21") (re.union (re.range "\x23" "\x5c\x5b") (re.range "\x5c\x5d" "\x7e"))))  (re.++  (str.to.re "\x5c\x5c")  (re.union (re.range "\x0d" "\x7f") (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x0b") (re.range "\x01" "\x09"))))))))
infix :SmtNode{intersectionRegexes=[], next=SmtNode{intersectionRegexes=[\s*, ([--]|!|[#-\[]|[\]-~])|(\\[--	])], next=SmtNode{intersectionRegexes=[], next=SmtNode{intersectionRegexes=[]}}}}
infix : (re.inter (re.* (re.union (re.range "\t" "\t") (re.range "\n" "\n") (re.range "\r" "\r") (str.to.re " ")) )  (re.union  (re.union  (re.union  (str.to.re "\x7f") (re.union (re.range "\x0e" "\x1f") (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x0b") (re.range "\x01" "\x08"))))) (re.union  (str.to.re "\x21") (re.union (re.range "\x23" "\x5c\x5b") (re.range "\x5c\x5d" "\x7e"))))  (re.++  (str.to.re "\x5c\x5c")  (re.union (re.range "\x0d" "\x7f") (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x0b") (re.range "\x01" "\x09")))))) )  
suffix :SmtNode{intersectionRegexes=[[\s\S]*ï¼†ï½ž(\s*(([--]|!|[#-\[]|[\]-~])|(\\[--	]))), [\s\S]*ï¼†ï½ž((\s*(([--]|!|[#-\[]|[\]-~])|(\\[--	])))(\s*"))]}
suffix :(re.inter  (re.inter  (re.++  (str.to.re "\x0b") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp  (re.++ (re.* (re.union (re.range "\t" "\t") (re.range "\n" "\n") (re.range "\r" "\r") (str.to.re " ")) )  (re.union  (re.union  (re.union  (str.to.re "\x7f") (re.union (re.range "\x0e" "\x1f") (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x0b") (re.range "\x01" "\x08"))))) (re.union  (str.to.re "\x21") (re.union (re.range "\x23" "\x5c\x5b") (re.range "\x5c\x5d" "\x7e"))))  (re.++  (str.to.re "\x5c\x5c")  (re.union (re.range "\x0d" "\x7f") (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x0b") (re.range "\x01" "\x09")))))))))  (re.inter  (re.++  (str.to.re "\x0b") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp  (re.++  (re.++ (re.* (re.union (re.range "\t" "\t") (re.range "\n" "\n") (re.range "\r" "\r") (str.to.re " ")) )  (re.union  (re.union  (re.union  (str.to.re "\x7f") (re.union (re.range "\x0e" "\x1f") (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x0b") (re.range "\x01" "\x08"))))) (re.union  (str.to.re "\x21") (re.union (re.range "\x23" "\x5c\x5b") (re.range "\x5c\x5d" "\x7e"))))  (re.++  (str.to.re "\x5c\x5c")  (re.union (re.range "\x0d" "\x7f") (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x0b") (re.range "\x01" "\x09")))))))  (re.++ (re.* (re.union (re.range "\t" "\t") (re.range "\n" "\n") (re.range "\r" "\r") (str.to.re " ")) )  (str.to.re "\x22"))))) )