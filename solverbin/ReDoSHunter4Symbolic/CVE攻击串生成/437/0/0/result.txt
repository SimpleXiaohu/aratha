Vulnerable
Attack String :";FONE "+"0"*10000+"/"
prefix :SmtNode{intersectionRegexes=[;FONE ]}
prefix : (re.++  (str.to.re "\x3b") (re.++  (str.to.re "\x46") (re.++  (str.to.re "\x4f") (re.++  (str.to.re "\x4e") (re.++  (str.to.re "\x45")  (str.to.re "\x20"))))))
infix :SmtNode{intersectionRegexes=[\d+, (\d+)([^\/;]*), [^\/;]*]}
infix :(re.inter (re.+ (re.range "0" "9") )  (re.++ (re.+ (re.range "0" "9") ) (re.*  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) )) (re.*  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) ) )
suffix :SmtNode{intersectionRegexes=[0[\s\S]*＆～((([^\/;]*)＆[\s\S]{1,})), 0[\s\S]*＆～(((([^\/;]*)＆[\s\S]{1,}))(( Build|\) AppleWebKit)))]}
suffix :(re.inter  (re.inter  (re.++  (str.to.re "\x30") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp  (re.inter (re.*  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))))  (re.inter  (re.++  (str.to.re "\x30") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp  (re.++  (re.inter (re.*  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))  (re.union  (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x42") (re.++  (str.to.re "\x75") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6c")  (str.to.re "\x64"))))))  (re.++  (str.to.re "\x5c\x29") (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x70") (re.++  (str.to.re "\x70") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x57") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x62") (re.++  (str.to.re "\x4b") (re.++  (str.to.re "\x69")  (str.to.re "\x74"))))))))))))))))) )