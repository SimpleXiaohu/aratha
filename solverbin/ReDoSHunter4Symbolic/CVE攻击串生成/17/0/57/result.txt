Vulnerable
Attack String :"Aaa"+"a"*10000+" "
prefix :SmtNode{intersectionRegexes=[Aaa]}
prefix : (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x61")  (str.to.re "\x61")))
infix :SmtNode{intersectionRegexes=[[\\\-0-9a-z]{1,}, ([\\\-0-9a-z]{1,})([^\s]*), [^\s]*]}
infix :(re.inter  (re.++   (re.union  (str.to.re "\x5c\x5c") (re.union  (str.to.re "\x5c\x2d") (re.union (re.range "\x30" "\x39") (re.range "\x61" "\x7a")))) (re.*   (re.union  (str.to.re "\x5c\x5c") (re.union  (str.to.re "\x5c\x2d") (re.union (re.range "\x30" "\x39") (re.range "\x61" "\x7a")))) ))  (re.++  (re.++   (re.union  (str.to.re "\x5c\x5c") (re.union  (str.to.re "\x5c\x2d") (re.union (re.range "\x30" "\x39") (re.range "\x61" "\x7a")))) (re.*   (re.union  (str.to.re "\x5c\x5c") (re.union  (str.to.re "\x5c\x2d") (re.union (re.range "\x30" "\x39") (re.range "\x61" "\x7a")))) )) (re.* (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) )) (re.* (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) ) )
suffix :SmtNode{intersectionRegexes=[a[\s\S]*＆～((([^\s]*)＆[\s\S]{1,})), a[\s\S]*＆～(((([^\s]*)＆[\s\S]{1,}))([^\s\-_]))]}
suffix :(re.inter  (re.inter  (re.++  (str.to.re "\x61") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp  (re.inter (re.* (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))))  (re.inter  (re.++  (str.to.re "\x61") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp  (re.++  (re.inter (re.* (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.union  (str.to.re "\x5c\x2d")  (str.to.re "\x5f")))))) )