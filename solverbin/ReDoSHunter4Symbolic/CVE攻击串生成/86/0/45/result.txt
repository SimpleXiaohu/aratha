Vulnerable
Attack String :"android"+"\tredmi "*5000+"@"
prefix :SmtNode{intersectionRegexes=[android]}
prefix : (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x69")  (str.to.re "\x64")))))))
infix :SmtNode{intersectionRegexes=[.+, (.+)(redmi[\-\s_]*(note|k)?[\s_]?)([\s\w]+), [\s\w]+]}
infix :(re.inter (re.+ re.allchar )  (re.++ (re.+ re.allchar ) (re.++  (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x6d") (re.++  (str.to.re "\x69") (re.++ (re.*  (re.union  (str.to.re "\x5c\x2d") (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x5f"))) ) (re.++ (re.opt  (re.union  (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x74")  (str.to.re "\x65"))))  (str.to.re "\x6b")) ) (re.opt  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x5f")) )))))))) (re.+  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re "_"))) ))) (re.+  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re "_"))) ) )
suffix :SmtNode{intersectionRegexes=[@]}
suffix : (str.to.re "\x40")