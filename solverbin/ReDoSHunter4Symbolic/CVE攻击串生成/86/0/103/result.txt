Vulnerable
Attack String :"android1redmi"+"\t "*5000+"\nA~!\nA~!"
prefix :SmtNode{intersectionRegexes=[android1redmi]}
prefix : (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x31") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x6d")  (str.to.re "\x69")))))))))))))
infix :SmtNode{intersectionRegexes=[([\-\s_]*)(\s+), ([\-\s_]*)((note|k)?([\s_]?[\s\w]+))(\s+)]}
infix :(re.inter  (re.++ (re.*  (re.union  (str.to.re "\x5c\x2d") (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x5f"))) ) (re.+ (re.union (re.range "\t" "\t") (re.range "\n" "\n") (re.range "\r" "\r") (str.to.re " ")) ))  (re.++ (re.*  (re.union  (str.to.re "\x5c\x2d") (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x5f"))) ) (re.++  (re.++ (re.opt  (re.union  (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x74")  (str.to.re "\x65"))))  (str.to.re "\x6b")) )  (re.++ (re.opt  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x5f")) ) (re.+  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re "_"))) ))) (re.+ (re.union (re.range "\t" "\t") (re.range "\n" "\n") (re.range "\r" "\r") (str.to.re " ")) ))) )
suffix :SmtNode{intersectionRegexes=[
A~!
A~!]}
suffix : (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x7e") (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x7e")  (str.to.re "\x21"))))))))