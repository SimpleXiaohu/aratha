Vulnerable
Attack String :"HTC\u0000"+" "*10000+"\r"
prefix :SmtNode{intersectionRegexes=[((([;,] *)?)((htccn_chs-)?)HTC[ \-_]?)([^;]+)]}
prefix : (re.++  (re.++ (re.opt  (re.++  (re.union  (str.to.re "\x3b")  (str.to.re "\x2c")) (re.*  (str.to.re "\x20") )) ) (re.++ (re.opt  (re.++  (str.to.re "\x68") (re.++  (str.to.re "\x74") (re.++  (str.to.re "\x63") (re.++  (str.to.re "\x63") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x5f") (re.++  (str.to.re "\x63") (re.++  (str.to.re "\x68") (re.++  (str.to.re "\x73")  (str.to.re "\x2d")))))))))) ) (re.++  (str.to.re "\x48") (re.++  (str.to.re "\x54") (re.++  (str.to.re "\x43") (re.opt  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x2d")  (str.to.re "\x5f"))) )))))) (re.+  (str.to.re "\x3b") ))
infix :SmtNode{intersectionRegexes=[([^;]+)&(([^;]+)()( *))&( *)&(.+)]}
infix : (re.++ (re.+  (str.to.re "\x3b") ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.+  (str.to.re "\x3b") ) (re.++  (re.*  (str.to.re "\x20") ))) (re.++  (str.to.re "\x26") (re.++ (re.*  (str.to.re "\x20") ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[ [\s\S]*＆～((( *)＆[\s\S]{1,})),  [\s\S]*＆～(((( *)＆[\s\S]{1,}))(Build))]}
suffix :(re.inter  (re.inter  (re.++  (str.to.re "\x20") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp  (re.inter (re.*  (str.to.re "\x20") )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))))  (re.inter  (re.++  (str.to.re "\x20") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp  (re.++  (re.inter (re.*  (str.to.re "\x20") )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))  (re.++  (str.to.re "\x42") (re.++  (str.to.re "\x75") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6c")  (str.to.re "\x64")))))))) )