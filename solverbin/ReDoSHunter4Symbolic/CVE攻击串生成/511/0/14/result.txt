Vulnerable
Attack String :"Windows Phone A; "+"IEMobile/\u0000)ASUS"*5000+";\n;◎;\n;◎;"
prefix :SmtNode{intersectionRegexes=[Windows Phone A; ]}
prefix : (re.++  (str.to.re "\x57") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x77") (re.++  (str.to.re "\x73") (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x68") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x3b")  (str.to.re "\x20")))))))))))))))))
infix :SmtNode{intersectionRegexes=[([^
]*)&(([^
]*)(IEMobile\/[^;\)]+(;|\)) ?((ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?)(ASUS|Asus))([^;]*))&([^;]*)&(.+)]}
infix : (re.++ (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (re.++  (str.to.re "\x49") (re.++  (str.to.re "\x45") (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x62") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x5c\x2f") (re.++ (re.+  (re.union  (str.to.re "\x3b")  (str.to.re "\x5c\x29")) ) (re.++  (re.union  (str.to.re "\x3b")  (str.to.re "\x5c\x29")) (re.++ (re.opt  (str.to.re "\x20") ) (re.++ (re.opt  (re.union  (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x52") (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x3b") (re.++ (re.opt  (str.to.re "\x20") ) (re.++  (str.to.re "\x54") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x75") (re.++  (str.to.re "\x63") (re.++  (str.to.re "\x68") (re.++  (str.to.re "\x3b") (re.opt  (str.to.re "\x20") )))))))))))) (re.union  (re.++  (str.to.re "\x54") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x75") (re.++  (str.to.re "\x63") (re.++  (str.to.re "\x68") (re.++  (str.to.re "\x3b") (re.opt  (str.to.re "\x20") )))))))  (re.++  (str.to.re "\x57") (re.++  (str.to.re "\x70") (re.++  (str.to.re "\x73") (re.++  (str.to.re "\x4c") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x54") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x73") (re.++  (str.to.re "\x74") (re.++  (str.to.re "\x3b") (re.opt  (str.to.re "\x20") ))))))))))))))))) )  (re.union  (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x53") (re.++  (str.to.re "\x55")  (str.to.re "\x53"))))  (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x73") (re.++  (str.to.re "\x75")  (str.to.re "\x73")))))))))))))))))) (re.*  (str.to.re "\x3b") ))) (re.++  (str.to.re "\x26") (re.++ (re.*  (str.to.re "\x3b") ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[;
;◎;
;◎;]}
suffix : (re.++  (str.to.re "\x3b") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x3b") (re.++  (str.to.re "\x25ce") (re.++  (str.to.re "\x3b") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x3b") (re.++  (str.to.re "\x25ce")  (str.to.re "\x3b")))))))))