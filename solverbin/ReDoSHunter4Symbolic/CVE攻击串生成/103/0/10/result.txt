Vulnerable
Attack String :".0"+"0"*10000+"◎"
prefix :SmtNode{intersectionRegexes=[((\+|-)?\d*\.)(((\d*)＆[\s\S]{1,}))]}
prefix : (re.++  (re.++ (re.opt  (re.union  (str.to.re "\x5c\x2b")  (str.to.re "\x2d")) ) (re.++ (re.* (re.range "0" "9") )  (str.to.re "\x5c\x2e")))  (re.inter (re.* (re.range "0" "9") )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))))
infix :SmtNode{intersectionRegexes=[([0-9]*)&(([0-9]*)((E|e)?((\+|\-))?)([0-9]+))&([0-9]+)&(.+)]}
infix : (re.++ (re.* (re.range "\x30" "\x39") ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.* (re.range "\x30" "\x39") ) (re.++  (re.++ (re.opt  (re.union  (str.to.re "\x45")  (str.to.re "\x65")) ) (re.opt  (re.union  (str.to.re "\x5c\x2b")  (str.to.re "\x5c\x2d")) )) (re.+ (re.range "\x30" "\x39") ))) (re.++  (str.to.re "\x26") (re.++ (re.+ (re.range "\x30" "\x39") ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[◎]}
suffix : (str.to.re "\x25ce")