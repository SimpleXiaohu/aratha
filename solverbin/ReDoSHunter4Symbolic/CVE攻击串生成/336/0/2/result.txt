Vulnerable
Attack String :"foobar\u0000"+"\u0000/\u0000"*5000+"@"
prefix :SmtNode{intersectionRegexes=[((foobar))(\S+)]}
prefix : (re.++  (re.++  (str.to.re "\x66") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x62") (re.++  (str.to.re "\x61")  (str.to.re "\x72")))))) (re.+ (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")))) ))
infix :SmtNode{intersectionRegexes=[(\S+)([^\s.]+), (\S+)(\/)([^\s.]+)]}
infix :(re.inter  (re.++ (re.+ (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")))) ) (re.+  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x2e")) ))  (re.++ (re.+ (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")))) ) (re.++  (str.to.re "\x5c\x2f") (re.+  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x2e")) ))) )
suffix :SmtNode{intersectionRegexes=[@]}
suffix : (str.to.re "\x40")