Vulnerable
Attack String :"charset="+" "*10000+"~A~"
prefix :SmtNode{intersectionRegexes=[charset=]}
prefix : (re.++  (str.to.re "\x63") (re.++  (str.to.re "\x68") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x73") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x74")  (str.to.re "\x3d"))))))))
infix :SmtNode{intersectionRegexes=[([ 
	]*)&(([ 
	]*)((\"|')?)( *))&( *)&(.+)]}
infix : (re.++ (re.*  (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x0a") (re.union  (str.to.re "\x0d") (re.union  (str.to.re "\x09")  (str.to.re "\x0b")))))) ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.*  (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x0a") (re.union  (str.to.re "\x0d") (re.union  (str.to.re "\x09")  (str.to.re "\x0b")))))) ) (re.++ (re.opt  (re.union  (str.to.re "\x5c\x22")  (str.to.re "\x27")) ) (re.*  (str.to.re "\x20") ))) (re.++  (str.to.re "\x26") (re.++ (re.*  (str.to.re "\x20") ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[~A~]}
suffix : (re.++  (str.to.re "\x7e") (re.++  (str.to.re "\x41")  (str.to.re "\x7e")))