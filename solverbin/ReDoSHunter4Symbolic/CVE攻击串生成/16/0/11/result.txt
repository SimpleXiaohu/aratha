Vulnerable
Attack String :"/"+"."*5000+"A/A"
prefix :SmtNode{intersectionRegexes=[(((((\/?)?))ï¼†[\s\S]{1,}))]}
prefix : (re.inter (re.opt (re.opt  (str.to.re "\x5c\x2f") ) )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))
infix :SmtNode{intersectionRegexes=[[\s\S]*, ([\s\S]*)(\.{1,2}), \.{1,2}]}
infix :(re.inter (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )  (re.++ (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )  (re.union   (str.to.re "\x5c\x2e")  (re.++  (str.to.re "\x5c\x2e")    (str.to.re "\x5c\x2e"))))  (re.union   (str.to.re "\x5c\x2e")  (re.++  (str.to.re "\x5c\x2e")    (str.to.re "\x5c\x2e"))) )
suffix :SmtNode{intersectionRegexes=[A/A]}
suffix : (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x2f")  (str.to.re "\x41")))