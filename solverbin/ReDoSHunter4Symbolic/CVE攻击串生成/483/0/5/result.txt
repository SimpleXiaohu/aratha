Vulnerable
Attack String :";GT-I9082 "+"\u0000"*10000+""
prefix :SmtNode{intersectionRegexes=[(; *((SAMSUNG |Samsung )?)(Galaxy (Note II|S\d)|GT-I9082|GT-I9205|GT-N7\d{3}|SM-N9005))((([^\/;]*)ï¼†[\s\S]{1,}))]}
prefix : (re.++  (re.++  (str.to.re "\x3b") (re.++ (re.*  (str.to.re "\x20") ) (re.++ (re.opt  (re.union  (re.++  (str.to.re "\x53") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x53") (re.++  (str.to.re "\x55") (re.++  (str.to.re "\x4e") (re.++  (str.to.re "\x47")  (str.to.re "\x20"))))))))  (re.++  (str.to.re "\x53") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x6d") (re.++  (str.to.re "\x73") (re.++  (str.to.re "\x75") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x67")  (str.to.re "\x20"))))))))) )  (re.union  (re.++  (str.to.re "\x47") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x78") (re.++  (str.to.re "\x79") (re.++  (str.to.re "\x20")  (re.union  (re.++  (str.to.re "\x4e") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x74") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x49")  (str.to.re "\x49")))))))  (re.++  (str.to.re "\x53") (re.range "0" "9")))))))))) (re.union  (re.++  (str.to.re "\x47") (re.++  (str.to.re "\x54") (re.++  (str.to.re "\x2d") (re.++  (str.to.re "\x49") (re.++  (str.to.re "\x39") (re.++  (str.to.re "\x30") (re.++  (str.to.re "\x38")  (str.to.re "\x32")))))))) (re.union  (re.++  (str.to.re "\x47") (re.++  (str.to.re "\x54") (re.++  (str.to.re "\x2d") (re.++  (str.to.re "\x49") (re.++  (str.to.re "\x39") (re.++  (str.to.re "\x32") (re.++  (str.to.re "\x30")  (str.to.re "\x35")))))))) (re.union  (re.++  (str.to.re "\x47") (re.++  (str.to.re "\x54") (re.++  (str.to.re "\x2d") (re.++  (str.to.re "\x4e") (re.++  (str.to.re "\x37")  (re.++  (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))) (re.*  (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9"))) )))))))  (re.++  (str.to.re "\x53") (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x2d") (re.++  (str.to.re "\x4e") (re.++  (str.to.re "\x39") (re.++  (str.to.re "\x30") (re.++  (str.to.re "\x30")  (str.to.re "\x35")))))))))))))))  (re.inter (re.*  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))))
infix :SmtNode{intersectionRegexes=[([^\/;]*)&(([^\/;]*)(\/?)([^\/;]*))&([^\/;]*)&(.+)]}
infix : (re.++ (re.*  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.*  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) ) (re.++ (re.opt  (str.to.re "\x5c\x2f") ) (re.*  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) ))) (re.++  (str.to.re "\x26") (re.++ (re.*  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[]}
suffix :