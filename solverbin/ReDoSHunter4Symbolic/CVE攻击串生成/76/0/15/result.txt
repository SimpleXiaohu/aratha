Vulnerable
Attack String :"rgba( "+" "*5000+"A\rA"
prefix :SmtNode{intersectionRegexes=[(rgba\()((([ \n\r\t]*)ï¼†[\s\S]{1,}))]}
prefix : (re.++  (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x67") (re.++  (str.to.re "\x62") (re.++  (str.to.re "\x61")  (str.to.re "\x5c\x28")))))  (re.inter (re.*  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x6e") (re.union  (str.to.re "\x5c\x72")  (str.to.re "\x5c\x74")))) )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))))
infix :SmtNode{intersectionRegexes=[[ \n\r\t]*, ([ \n\r\t]*)(.+), .+]}
infix :(re.inter (re.*  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x6e") (re.union  (str.to.re "\x5c\x72")  (str.to.re "\x5c\x74")))) )  (re.++ (re.*  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x6e") (re.union  (str.to.re "\x5c\x72")  (str.to.re "\x5c\x74")))) ) (re.+ re.allchar )) (re.+ re.allchar ) )
suffix :SmtNode{intersectionRegexes=[AA]}
suffix : (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x0d")  (str.to.re "\x41")))