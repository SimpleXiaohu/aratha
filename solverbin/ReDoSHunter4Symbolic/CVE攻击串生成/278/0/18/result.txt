Vulnerable
Attack String :"Android-0.0;"+" "*10000+"\r"
prefix :SmtNode{intersectionRegexes=[Android-0.0;]}
prefix : (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x2d") (re.++  (str.to.re "\x30") (re.++ re.allchar (re.++  (str.to.re "\x30")  (str.to.re "\x3b"))))))))))))
infix :SmtNode{intersectionRegexes=[ *, ( *)(.+), .+]}
infix :(re.inter (re.*  (str.to.re "\x20") )  (re.++ (re.*  (str.to.re "\x20") ) (re.+ re.allchar )) (re.+ re.allchar ) )
suffix :SmtNode{intersectionRegexes=[ [\s\S]*＆～(.+),  [\s\S]*＆～((.+)( Build[ \/]))]}
suffix :(re.inter  (re.inter  (re.++  (str.to.re "\x20") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp (re.+ re.allchar )))  (re.inter  (re.++  (str.to.re "\x20") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp  (re.++ (re.+ re.allchar )  (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x42") (re.++  (str.to.re "\x75") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x64")  (re.union  (str.to.re "\x20")  (str.to.re "\x5c\x2f"))))))))))) )