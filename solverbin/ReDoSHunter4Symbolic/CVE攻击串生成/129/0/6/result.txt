Vulnerable
Attack String :"/*# sourceMappingURL="+"\t"*10000+"!\n!\n!"
prefix :SmtNode{intersectionRegexes=[/*# sourceMappingURL=]}
prefix : (re.++ (re.*  (str.to.re "\x2f") ) (re.++  (str.to.re "\x23") (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x73") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x75") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x63") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x70") (re.++  (str.to.re "\x70") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x67") (re.++  (str.to.re "\x55") (re.++  (str.to.re "\x52") (re.++  (str.to.re "\x4c")  (str.to.re "\x3d"))))))))))))))))))))
infix :SmtNode{intersectionRegexes=[([^
]*)&(([^
]*)()([ 
	]*))&([ 
	]*)&(.+)]}
infix : (re.++ (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (re.*  (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x0a") (re.union  (str.to.re "\x0d") (re.union  (str.to.re "\x09")  (str.to.re "\x0b")))))) ))) (re.++  (str.to.re "\x26") (re.++ (re.*  (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x0a") (re.union  (str.to.re "\x0d") (re.union  (str.to.re "\x09")  (str.to.re "\x0b")))))) ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[!
!
!]}
suffix : (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x0a")  (str.to.re "\x21")))))