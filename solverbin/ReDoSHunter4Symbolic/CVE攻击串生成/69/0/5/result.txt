Vulnerable
Attack String :"---\n\r"+"\r\n"*32+"A"
prefix :SmtNode{intersectionRegexes=[(([^\n\r\S]*)---(\r\n?|\n))(.*(\r\n?|\n))]}
prefix : (re.++  (re.++ (re.*  (re.union  (str.to.re "\x5c\x6e") (re.union  (str.to.re "\x5c\x72") (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")))))) ) (re.++  (str.to.re "\x2d") (re.++  (str.to.re "\x2d") (re.++  (str.to.re "\x2d")  (re.union  (re.++  (str.to.re "\x5c\x72") (re.opt  (str.to.re "\x5c\x6e") ))  (str.to.re "\x5c\x6e"))))))  (re.++ (re.* re.allchar )  (re.union  (re.++  (str.to.re "\x5c\x72") (re.opt  (str.to.re "\x5c\x6e") ))  (str.to.re "\x5c\x6e"))))
infix :SmtNode{intersectionRegexes=[.*], next=SmtNode{intersectionRegexes=[(
?
)&(
?.*)&(.{0,})], next=SmtNode{intersectionRegexes=[]}}}
infix :(re.* re.allchar )  (re.++  (re.++  (str.to.re "\x0d") (re.++ (re.opt  (str.to.re "\x0a") )  (str.to.re "\x0a"))) (re.++  (str.to.re "\x26") (re.++  (re.++  (str.to.re "\x0d") (re.++ (re.opt  (str.to.re "\x0a") ) (re.* re.allchar ))) (re.++  (str.to.re "\x26")  (re.++ "" (re.* "" )))))) 
suffix :SmtNode{intersectionRegexes=[A]}
suffix : (str.to.re "\x41")