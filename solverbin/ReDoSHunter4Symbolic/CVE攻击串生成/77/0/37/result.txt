Vulnerable
Attack String :"rgb(\u0000"+" "*10000+"A\nA\nA"
prefix :SmtNode{intersectionRegexes=[(rgb\([ \n\r\t]*)(.+)]}
prefix : (re.++  (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x67") (re.++  (str.to.re "\x62") (re.++  (str.to.re "\x5c\x28") (re.*  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x6e") (re.union  (str.to.re "\x5c\x72")  (str.to.re "\x5c\x74")))) ))))) (re.+ re.allchar ))
infix :SmtNode{intersectionRegexes=[.+, (.+)([ \n\r\t]*), [ \n\r\t]*]}
infix :(re.inter (re.+ re.allchar )  (re.++ (re.+ re.allchar ) (re.*  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x6e") (re.union  (str.to.re "\x5c\x72")  (str.to.re "\x5c\x74")))) )) (re.*  (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x5c\x6e") (re.union  (str.to.re "\x5c\x72")  (str.to.re "\x5c\x74")))) ) )
suffix :SmtNode{intersectionRegexes=[A
A
A]}
suffix : (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x0a")  (str.to.re "\x41")))))