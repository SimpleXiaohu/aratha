Vulnerable
Attack String :"HTC Streaming Player \u0000 / \u0000 / \u0000 / 0.0"+"00"*5000+"@"
prefix :SmtNode{intersectionRegexes=[((HTC) Streaming Player \S+ \/ \S+ \/ \S+ \/ (\d+)\.)(\d+)]}
prefix : (re.++  (re.++  (re.++  (str.to.re "\x48") (re.++  (str.to.re "\x54")  (str.to.re "\x43"))) (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x53") (re.++  (str.to.re "\x74") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x6d") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x67") (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x79") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x20") (re.++ (re.+ (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")))) ) (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x5c\x2f") (re.++  (str.to.re "\x20") (re.++ (re.+ (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")))) ) (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x5c\x2f") (re.++  (str.to.re "\x20") (re.++ (re.+ (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")))) ) (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x5c\x2f") (re.++  (str.to.re "\x20") (re.++ (re.+ (re.range "0" "9") )  (str.to.re "\x5c\x2e"))))))))))))))))))))))))))))))))) (re.+ (re.range "0" "9") ))
infix :SmtNode{intersectionRegexes=[([0-9]+)&(([0-9]+)(\.?)([0-9]+))&([0-9]+)&(.+)]}
infix : (re.++ (re.+ (re.range "\x30" "\x39") ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.+ (re.range "\x30" "\x39") ) (re.++ (re.opt  (str.to.re "\x5c\x2e") ) (re.+ (re.range "\x30" "\x39") ))) (re.++  (str.to.re "\x26") (re.++ (re.+ (re.range "\x30" "\x39") ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[@]}
suffix : (str.to.re "\x40")