Vulnerable
Attack String :" "+"\t"*5000+"\u0000"
prefix :SmtNode{intersectionRegexes=[ ]}
prefix : (str.to.re "\x20")
infix :SmtNode{intersectionRegexes=[(([^
]|
)*)&((([^
]|
)*)()([ 
	]+))&([ 
	]+)&(.+)]}
infix : (re.++ (re.*  (re.union  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d"))  (str.to.re "\x0a")) ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.*  (re.union  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d"))  (str.to.re "\x0a")) ) (re.++  (re.+  (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x0a") (re.union  (str.to.re "\x0d") (re.union  (str.to.re "\x09")  (str.to.re "\x0b")))))) ))) (re.++  (str.to.re "\x26") (re.++ (re.+  (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x0a") (re.union  (str.to.re "\x0d") (re.union  (str.to.re "\x09")  (str.to.re "\x0b")))))) ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[	[\s\S]*＆～(\s+)]}
suffix : (re.inter  (re.++  (str.to.re "\x09") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp (re.+ (re.union (re.range "\t" "\t") (re.range "\n" "\n") (re.range "\r" "\r") (str.to.re " ")) )))