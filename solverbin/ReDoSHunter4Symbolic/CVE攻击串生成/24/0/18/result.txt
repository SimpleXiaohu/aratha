Vulnerable
Attack String :" "+"\t "*5000+"\u0000"
prefix :SmtNode{intersectionRegexes=[(\s+)]}
prefix :(re.+ (re.union (re.range "\t" "\t") (re.range "\n" "\n") (re.range "\r" "\r") (str.to.re " ")) )
infix :SmtNode{intersectionRegexes=[\s+, (\s+)((.|\n)*)(\s+), \s+]}
infix :(re.inter (re.+ (re.union (re.range "\t" "\t") (re.range "\n" "\n") (re.range "\r" "\r") (str.to.re " ")) )  (re.++ (re.+ (re.union (re.range "\t" "\t") (re.range "\n" "\n") (re.range "\r" "\r") (str.to.re " ")) ) (re.++ (re.*  (re.union re.allchar  (str.to.re "\x5c\x6e")) ) (re.+ (re.union (re.range "\t" "\t") (re.range "\n" "\n") (re.range "\r" "\r") (str.to.re " ")) ))) (re.+ (re.union (re.range "\t" "\t") (re.range "\n" "\n") (re.range "\r" "\r") (str.to.re " ")) ) )
suffix :SmtNode{intersectionRegexes=[	 [\s\S]*＆～(\s+)]}
suffix : (re.inter  (re.++  (str.to.re "\x09") (re.++  (str.to.re "\x20") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))) (re.comp (re.+ (re.union (re.range "\t" "\t") (re.range "\n" "\n") (re.range "\r" "\r") (str.to.re " ")) )))