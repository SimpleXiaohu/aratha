Vulnerable
Attack String :";"+" "*10000+"/"
prefix :SmtNode{intersectionRegexes=[;]}
prefix : (str.to.re "\x3b")
infix :SmtNode{intersectionRegexes=[( *)&(( *)()([^\/]+))&([^\/]+)&(.+)]}
infix : (re.++ (re.*  (str.to.re "\x20") ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.*  (str.to.re "\x20") ) (re.++  (re.+  (str.to.re "\x5c\x2f") ))) (re.++  (str.to.re "\x26") (re.++ (re.+  (str.to.re "\x5c\x2f") ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[ [\s\S]*＆～([^\/]+),  [\s\S]*＆～(([^\/]+)(_tenderloin( Build|\) AppleWebKit)))]}
suffix :(re.inter  (re.inter  (re.++  (str.to.re "\x20") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp (re.+  (str.to.re "\x5c\x2f") )))  (re.inter  (re.++  (str.to.re "\x20") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp  (re.++ (re.+  (str.to.re "\x5c\x2f") )  (re.++  (str.to.re "\x5f") (re.++  (str.to.re "\x74") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6e")  (re.union  (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x42") (re.++  (str.to.re "\x75") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6c")  (str.to.re "\x64"))))))  (re.++  (str.to.re "\x5c\x29") (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x70") (re.++  (str.to.re "\x70") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x57") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x62") (re.++  (str.to.re "\x4b") (re.++  (str.to.re "\x69")  (str.to.re "\x74")))))))))))))))))))))))))))) )