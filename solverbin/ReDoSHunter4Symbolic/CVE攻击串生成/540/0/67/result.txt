Vulnerable
Attack String :"HbbTV/1.1.1CE-HTML/1.1;THOM"+"\tLF\u0000"*5000+";A;"
prefix :SmtNode{intersectionRegexes=[HbbTV/1.1.1CE-HTML/1.1;THOM]}
prefix : (re.++  (str.to.re "\x48") (re.++  (str.to.re "\x62") (re.++  (str.to.re "\x62") (re.++  (str.to.re "\x54") (re.++  (str.to.re "\x56") (re.++  (str.to.re "\x2f") (re.++  (str.to.re "\x31") (re.++ re.allchar (re.++  (str.to.re "\x31") (re.++ re.allchar (re.++  (str.to.re "\x31") (re.++  (str.to.re "\x43") (re.++  (str.to.re "\x45") (re.++  (str.to.re "\x2d") (re.++  (str.to.re "\x48") (re.++  (str.to.re "\x54") (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x4c") (re.++  (str.to.re "\x2f") (re.++  (str.to.re "\x31") (re.++ re.allchar (re.++  (str.to.re "\x31") (re.++  (str.to.re "\x3b") (re.++  (str.to.re "\x54") (re.++  (str.to.re "\x48") (re.++  (str.to.re "\x4f")  (str.to.re "\x4d")))))))))))))))))))))))))))
infix :SmtNode{intersectionRegexes=[(([^;]*)([^;]+))&(([^;]*)(([ 
	]|;)[^
]{0,}LF)([^;]+))&(.+)]}
infix : (re.++  (re.++ (re.*  (str.to.re "\x3b") ) (re.+  (str.to.re "\x3b") )) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.*  (str.to.re "\x3b") ) (re.++  (re.++  (re.union  (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x0a") (re.union  (str.to.re "\x0d") (re.union  (str.to.re "\x09")  (str.to.re "\x0b"))))))  (str.to.re "\x3b")) (re.++  (re.++ "" (re.* "" )) (re.++  (str.to.re "\x4c")  (str.to.re "\x46")))) (re.+  (str.to.re "\x3b") ))) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))
suffix :SmtNode{intersectionRegexes=[;A;]}
suffix : (re.++  (str.to.re "\x3b") (re.++  (str.to.re "\x41")  (str.to.re "\x3b")))