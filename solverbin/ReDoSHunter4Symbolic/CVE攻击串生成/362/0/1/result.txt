Vulnerable
Attack String :"Darwin/111"+"0"*10000+"\r"
prefix :SmtNode{intersectionRegexes=[Darwin/111]}
prefix : (re.++  (str.to.re "\x44") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x77") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x2f") (re.++  (str.to.re "\x31") (re.++  (str.to.re "\x31")  (str.to.re "\x31"))))))))))
infix :SmtNode{intersectionRegexes=[([0-9]+)&(([0-9]+)()([^
]*))&([^
]*)&(.+)]}
infix : (re.++ (re.+ (re.range "\x30" "\x39") ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.+ (re.range "\x30" "\x39") ) (re.++  (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ))) (re.++  (str.to.re "\x26") (re.++ (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[0[\s\S]*＆～(((.*)＆[\s\S]{1,})), 0[\s\S]*＆～((((.*)＆[\s\S]{1,}))(\((i386|x86_64)\)))]}
suffix :(re.inter  (re.inter  (re.++  (str.to.re "\x30") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp  (re.inter (re.* re.allchar )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))))  (re.inter  (re.++  (str.to.re "\x30") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )) (re.comp  (re.++  (re.inter (re.* re.allchar )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) )))  (re.++  (str.to.re "\x5c\x28") (re.++  (re.union  (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x33") (re.++  (str.to.re "\x38")  (str.to.re "\x36"))))  (re.++  (str.to.re "\x78") (re.++  (str.to.re "\x38") (re.++  (str.to.re "\x36") (re.++  (str.to.re "\x5f") (re.++  (str.to.re "\x36")  (str.to.re "\x34")))))))  (str.to.re "\x5c\x29")))))) )