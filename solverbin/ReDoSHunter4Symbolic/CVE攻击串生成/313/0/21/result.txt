Vulnerable
Attack String :"Mozilla "+"MobileFlipboard-Briefing\u00000.0"*5000+"!1!"
prefix :SmtNode{intersectionRegexes=[(Mozilla)(((.*)ï¼†[\s\S]{1,}))]}
prefix : (re.++  (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x7a") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x6c")  (str.to.re "\x61")))))))  (re.inter (re.* re.allchar )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))))
infix :SmtNode{intersectionRegexes=[(([^
]*)([0-9]+))&(([^
]*)(Mobile[^
]*(Flipboard-Briefing)[^
]([0-9]+)\.)([0-9]+))&(.+)]}
infix : (re.++  (re.++ (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.+ (re.range "\x30" "\x39") )) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (re.++  (str.to.re "\x4d") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x62") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x65") (re.++ (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (re.++  (str.to.re "\x46") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x70") (re.++  (str.to.re "\x62") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x2d") (re.++  (str.to.re "\x42") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x66") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6e")  (str.to.re "\x67")))))))))))))))))) (re.++  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) (re.++ (re.+ (re.range "\x30" "\x39") )  (str.to.re "\x5c\x2e"))))))))))) (re.+ (re.range "\x30" "\x39") ))) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))
suffix :SmtNode{intersectionRegexes=[!1!]}
suffix : (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x31")  (str.to.re "\x21")))