Vulnerable
Attack String :"\u0000\t\t "+"\t"*5000+"\n@"
prefix :SmtNode{intersectionRegexes=[((.)(.*)\t(.*)\t)(((.*)ï¼†[\s\S]{1,}))]}
prefix : (re.++  (re.++ re.allchar (re.++ (re.* re.allchar ) (re.++  (str.to.re "\x5c\x74") (re.++ (re.* re.allchar )  (str.to.re "\x5c\x74")))))  (re.inter (re.* re.allchar )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))))
infix :SmtNode{intersectionRegexes=[(([^
]*)([^
]*))&(([^
]*)(	)([^
]*))&(.+)]}
infix : (re.++  (re.++ (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) )) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (str.to.re "\x09") (re.*  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ))) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))
suffix :SmtNode{intersectionRegexes=[
@]}
suffix : (re.++  (str.to.re "\x0a")  (str.to.re "\x40"))