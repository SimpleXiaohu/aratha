Vulnerable
Attack String :"Android 0; \u0000"+"\u0000 Build\u0000"*5000+"@"
prefix :SmtNode{intersectionRegexes=[(Android \d+((\.\d+)?)((\.\d+)?); )([^;]+)]}
prefix : (re.++  (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x20") (re.++ (re.+ (re.range "0" "9") ) (re.++ (re.opt  (re.++  (str.to.re "\x5c\x2e") (re.+ (re.range "0" "9") )) ) (re.++ (re.opt  (re.++  (str.to.re "\x5c\x2e") (re.+ (re.range "0" "9") )) ) (re.++  (str.to.re "\x3b")  (str.to.re "\x20"))))))))))))) (re.+  (str.to.re "\x3b") ))
infix :SmtNode{intersectionRegexes=[([^;]+)&(([^;]+)(( Build|\) AppleWebKit))([^
]+))&([^
]+)&(.+)]}
infix : (re.++ (re.+  (str.to.re "\x3b") ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.+  (str.to.re "\x3b") ) (re.++  (re.union  (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x42") (re.++  (str.to.re "\x75") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6c")  (str.to.re "\x64"))))))  (re.++  (str.to.re "\x5c\x29") (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x70") (re.++  (str.to.re "\x70") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x57") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x62") (re.++  (str.to.re "\x4b") (re.++  (str.to.re "\x69")  (str.to.re "\x74")))))))))))))) (re.+  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ))) (re.++  (str.to.re "\x26") (re.++ (re.+  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[@]}
suffix : (str.to.re "\x40")