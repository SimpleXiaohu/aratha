Vulnerable
Attack String :""+"00"*10000+"\u0000"
prefix :SmtNode{intersectionRegexes=[]}
prefix :
infix :SmtNode{intersectionRegexes=[(([0-9]|\.)+)&((([0-9]|\.)+)()((%|[A-Za-z0-9_])+))&((%|[A-Za-z0-9_])+)&(.+)]}
infix : (re.++ (re.+  (re.union (re.range "\x30" "\x39")  (str.to.re "\x5c\x2e")) ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.+  (re.union (re.range "\x30" "\x39")  (str.to.re "\x5c\x2e")) ) (re.++  (re.+  (re.union  (str.to.re "\x25")  (re.union (re.range "\x41" "\x5a") (re.union (re.range "\x61" "\x7a") (re.union (re.range "\x30" "\x39")  (str.to.re "\x5f"))))) ))) (re.++  (str.to.re "\x26") (re.++ (re.+  (re.union  (str.to.re "\x25")  (re.union (re.range "\x41" "\x5a") (re.union (re.range "\x61" "\x7a") (re.union (re.range "\x30" "\x39")  (str.to.re "\x5f"))))) ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[00[\s\S]*＆～([%\w]+)]}
suffix : (re.inter  (re.++  (str.to.re "\x30") (re.++  (str.to.re "\x30") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))) (re.comp (re.+  (re.union  (str.to.re "\x25") (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re "_"))) )))