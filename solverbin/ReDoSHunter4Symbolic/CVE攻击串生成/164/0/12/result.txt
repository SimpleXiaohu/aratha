Vulnerable
Attack String :"."+"00"*10000+"~A~"
prefix :SmtNode{intersectionRegexes=[([\d.]+)]}
prefix :(re.+  (re.union (re.range "0" "9")  (str.to.re "\x2e")) )
infix :SmtNode{intersectionRegexes=[(([0-9]|\.)+)&((([0-9]|\.)+)()((%|[A-Za-z0-9_])+))&((%|[A-Za-z0-9_])+)&(.+)]}
infix : (re.++ (re.+  (re.union (re.range "\x30" "\x39")  (str.to.re "\x5c\x2e")) ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.+  (re.union (re.range "\x30" "\x39")  (str.to.re "\x5c\x2e")) ) (re.++  (re.+  (re.union  (str.to.re "\x25")  (re.union (re.range "\x41" "\x5a") (re.union (re.range "\x61" "\x7a") (re.union (re.range "\x30" "\x39")  (str.to.re "\x5f"))))) ))) (re.++  (str.to.re "\x26") (re.++ (re.+  (re.union  (str.to.re "\x25")  (re.union (re.range "\x41" "\x5a") (re.union (re.range "\x61" "\x7a") (re.union (re.range "\x30" "\x39")  (str.to.re "\x5f"))))) ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[~A~]}
suffix : (re.++  (str.to.re "\x7e") (re.++  (str.to.re "\x41")  (str.to.re "\x7e")))