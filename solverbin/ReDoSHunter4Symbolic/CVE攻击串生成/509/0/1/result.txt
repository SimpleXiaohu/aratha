Vulnerable
Attack String :";e0000v0"+"00"*5000+"/"
prefix :SmtNode{intersectionRegexes=[(; *e\d{4}[a-z]?_?v)(\d+)]}
prefix : (re.++  (re.++  (str.to.re "\x3b") (re.++ (re.*  (str.to.re "\x20") ) (re.++  (str.to.re "\x65") (re.++  (re.++  (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9")))) (re.*  (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.++ (re.range "0" "9") (re.range "0" "9")))) )) (re.++ (re.opt (re.range "\x61" "\x7a") ) (re.++ (re.opt  (str.to.re "\x5f") )  (str.to.re "\x76"))))))) (re.+ (re.range "0" "9") ))
infix :SmtNode{intersectionRegexes=[([0-9]+)&(([0-9]+)()([^\/;]+))&([^\/;]+)&(.+)]}
infix : (re.++ (re.+ (re.range "\x30" "\x39") ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.+ (re.range "\x30" "\x39") ) (re.++  (re.+  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) ))) (re.++  (str.to.re "\x26") (re.++ (re.+  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[00[\s\S]*＆～([^\/;]+), 00[\s\S]*＆～(([^\/;]+)( Build\/))]}
suffix :(re.inter  (re.inter  (re.++  (str.to.re "\x30") (re.++  (str.to.re "\x30") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))) (re.comp (re.+  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) )))  (re.inter  (re.++  (str.to.re "\x30") (re.++  (str.to.re "\x30") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))) (re.comp  (re.++ (re.+  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) )  (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x42") (re.++  (str.to.re "\x75") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x64")  (str.to.re "\x5c\x2f")))))))))) )