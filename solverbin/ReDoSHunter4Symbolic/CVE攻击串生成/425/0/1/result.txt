Vulnerable
Attack String :";ASUS "+" "*10000+"@"
prefix :SmtNode{intersectionRegexes=[(; *ASUS)((([ _]*)ï¼†[\s\S]{1,}))]}
prefix : (re.++  (re.++  (str.to.re "\x3b") (re.++ (re.*  (str.to.re "\x20") ) (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x53") (re.++  (str.to.re "\x55")  (str.to.re "\x53"))))))  (re.inter (re.*  (re.union  (str.to.re "\x20")  (str.to.re "\x5f")) )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))))
infix :SmtNode{intersectionRegexes=[(( |_)*)&((( |_)*)()([^\/;]+))&([^\/;]+)&(.+)]}
infix : (re.++ (re.*  (re.union  (str.to.re "\x20")  (str.to.re "\x5f")) ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.*  (re.union  (str.to.re "\x20")  (str.to.re "\x5f")) ) (re.++  (re.+  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) ))) (re.++  (str.to.re "\x26") (re.++ (re.+  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[@]}
suffix : (str.to.re "\x40")