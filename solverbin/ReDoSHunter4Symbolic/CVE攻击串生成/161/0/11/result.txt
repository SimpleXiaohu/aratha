Vulnerable
Attack String :"%"+"00"*5000+" "
prefix :SmtNode{intersectionRegexes=[%]}
prefix : (str.to.re "\x25")
infix :SmtNode{intersectionRegexes=[\d+, (\d+)((\.)?)(\d+), \d+]}
infix :(re.inter (re.+ (re.range "0" "9") )  (re.++ (re.+ (re.range "0" "9") ) (re.++ (re.opt  (str.to.re "\x5c\x2e") ) (re.+ (re.range "0" "9") ))) (re.+ (re.range "0" "9") ) )
suffix :SmtNode{intersectionRegexes=[00[\s\S]*＆～(\d+), 00[\s\S]*＆～((\d+)([hlL]?([bcdeEfFgG\%ioOsuxX])))]}
suffix :(re.inter  (re.inter  (re.++  (str.to.re "\x30") (re.++  (str.to.re "\x30") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))) (re.comp (re.+ (re.range "0" "9") )))  (re.inter  (re.++  (str.to.re "\x30") (re.++  (str.to.re "\x30") (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))) (re.comp  (re.++ (re.+ (re.range "0" "9") )  (re.++ (re.opt  (re.union  (str.to.re "\x68") (re.union  (str.to.re "\x6c")  (str.to.re "\x4c"))) )  (re.union  (str.to.re "\x62") (re.union  (str.to.re "\x63") (re.union  (str.to.re "\x64") (re.union  (str.to.re "\x65") (re.union  (str.to.re "\x45") (re.union  (str.to.re "\x66") (re.union  (str.to.re "\x46") (re.union  (str.to.re "\x67") (re.union  (str.to.re "\x47") (re.union  (str.to.re "\x5c\x25") (re.union  (str.to.re "\x69") (re.union  (str.to.re "\x6f") (re.union  (str.to.re "\x4f") (re.union  (str.to.re "\x73") (re.union  (str.to.re "\x75") (re.union  (str.to.re "\x78")  (str.to.re "\x58"))))))))))))))))))))) )