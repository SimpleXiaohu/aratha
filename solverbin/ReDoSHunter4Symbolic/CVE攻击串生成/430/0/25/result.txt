Vulnerable
Attack String :"; "+"Coolpad \u0000"*5000+""
prefix :SmtNode{intersectionRegexes=[(;)((( *)ï¼†[\s\S]{1,}))]}
prefix : (re.++  (str.to.re "\x3b")  (re.inter (re.*  (str.to.re "\x20") )  (re.++   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) (re.*   (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " ")) (re.inter re.allchar (re.comp (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))))) ))))
infix :SmtNode{intersectionRegexes=[( *)([^\/;]+), ( *)(([^\/;]*)Coolpad[ _])([^\/;]+)]}
infix :(re.inter  (re.++ (re.*  (str.to.re "\x20") ) (re.+  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) ))  (re.++ (re.*  (str.to.re "\x20") ) (re.++  (re.++ (re.*  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) ) (re.++  (str.to.re "\x43") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x70") (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x64")  (re.union  (str.to.re "\x20")  (str.to.re "\x5f")))))))))) (re.+  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) ))) )
suffix :SmtNode{intersectionRegexes=[]}
suffix :