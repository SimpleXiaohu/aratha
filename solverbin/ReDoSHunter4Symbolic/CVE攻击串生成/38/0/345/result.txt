Vulnerable
Attack String :"["`"+"``"*16+"A\\!\nA!]!\n!]!\n\\!\n]!\nA\\!\nA!]!\n!]!\n\\!\n]!\n"
prefix :SmtNode{intersectionRegexes=[(([ \t]*)\[)(([`"$'])([^\\]|\\.)*([`"$']))]}
prefix : (re.++  (re.++ (re.*  (re.union  (str.to.re "\x20")  (str.to.re "\x5c\x74")) )  (str.to.re "\x5c\x5b"))  (re.++  (re.union  (str.to.re "\x60") (re.union  (str.to.re "\x22") (re.union  (str.to.re "\x24")  (str.to.re "\x27")))) (re.++ (re.*  (re.union  (str.to.re "\x5c\x5c")  (re.++  (str.to.re "\x5c\x5c") re.allchar)) )  (re.union  (str.to.re "\x60") (re.union  (str.to.re "\x22") (re.union  (str.to.re "\x24")  (str.to.re "\x27")))))))
infix :SmtNode{intersectionRegexes=[([`"$'])], next=SmtNode{intersectionRegexes=[([`"$'])]}}
infix : (re.union  (str.to.re "\x60") (re.union  (str.to.re "\x22") (re.union  (str.to.re "\x24")  (str.to.re "\x27"))))  (re.union  (str.to.re "\x60") (re.union  (str.to.re "\x22") (re.union  (str.to.re "\x24")  (str.to.re "\x27"))))
suffix :SmtNode{intersectionRegexes=[A\!
A!]!
!]!
\!
]!
A\!
A!]!
!]!
\!
]!
]}
suffix : (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x5c\x21") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x5d") (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x5d") (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x5c\x21") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x5d") (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x5c\x21") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x5d") (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x5d") (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x5c\x21") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x5d") (re.++  (str.to.re "\x21")  (str.to.re "\x0a"))))))))))))))))))))))))))))))))))