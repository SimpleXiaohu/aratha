Vulnerable
Attack String :"CPU OS 0.0"+"0"*10000+"A!\nA!\n"
prefix :SmtNode{intersectionRegexes=[((CPU[ +]OS|iPhone[ +]OS|CPU[ +]iPhone)[ +]+(\d+)[\._])(\d+)]}
prefix : (re.++  (re.++  (re.union  (re.++  (str.to.re "\x43") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x55") (re.++  (re.union  (str.to.re "\x20")  (str.to.re "\x2b")) (re.++  (str.to.re "\x4f")  (str.to.re "\x53")))))) (re.union  (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x68") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x65") (re.++  (re.union  (str.to.re "\x20")  (str.to.re "\x2b")) (re.++  (str.to.re "\x4f")  (str.to.re "\x53")))))))))  (re.++  (str.to.re "\x43") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x55") (re.++  (re.union  (str.to.re "\x20")  (str.to.re "\x2b")) (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x50") (re.++  (str.to.re "\x68") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6e")  (str.to.re "\x65")))))))))))) (re.++ (re.+  (re.union  (str.to.re "\x20")  (str.to.re "\x2b")) ) (re.++ (re.+ (re.range "0" "9") )  (re.union  (str.to.re "\x5c\x2e")  (str.to.re "\x5f"))))) (re.+ (re.range "0" "9") ))
infix :SmtNode{intersectionRegexes=[\d+, (\d+)((([\._](\d+))?))(.*), .*]}
infix :(re.inter (re.+ (re.range "0" "9") )  (re.++ (re.+ (re.range "0" "9") ) (re.++ (re.opt  (re.++  (re.union  (str.to.re "\x5c\x2e")  (str.to.re "\x5f")) (re.+ (re.range "0" "9") )) ) (re.* re.allchar ))) (re.* re.allchar ) )
suffix :SmtNode{intersectionRegexes=[A!
A!
]}
suffix : (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x41") (re.++  (str.to.re "\x21")  (str.to.re "\x0a"))))))