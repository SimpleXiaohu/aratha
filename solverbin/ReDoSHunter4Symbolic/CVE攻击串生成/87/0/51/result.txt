Vulnerable
Attack String :"android1mi"+"\r"*5000+"@"
prefix :SmtNode{intersectionRegexes=[android1mi]}
prefix : (re.++  (str.to.re "\x61") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x31") (re.++  (str.to.re "\x6d")  (str.to.re "\x69"))))))))))
infix :SmtNode{intersectionRegexes=[[\-\s_]*, ([\-\s_]*)((a\d|one|one[\s_]plus|note lte)?[\s_]?(\d?\w?)[\s_]*(plus)?)(\s+), \s+]}
infix :(re.inter (re.*  (re.union  (str.to.re "\x5c\x2d") (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x5f"))) )  (re.++ (re.*  (re.union  (str.to.re "\x5c\x2d") (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x5f"))) ) (re.++  (re.++ (re.opt  (re.union  (re.++  (str.to.re "\x61") (re.range "0" "9")) (re.union  (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6e")  (str.to.re "\x65"))) (re.union  (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x65") (re.++  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x5f")) (re.++  (str.to.re "\x70") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x75")  (str.to.re "\x73"))))))))  (re.++  (str.to.re "\x6e") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x74") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x20") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x74")  (str.to.re "\x65"))))))))))) ) (re.++ (re.opt  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x5f")) ) (re.++  (re.++ (re.opt (re.range "0" "9") ) (re.opt (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re "_")) )) (re.++ (re.*  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x5f")) ) (re.opt  (re.++  (str.to.re "\x70") (re.++  (str.to.re "\x6c") (re.++  (str.to.re "\x75")  (str.to.re "\x73")))) ))))) (re.+ (re.union (re.range "\t" "\t") (re.range "\n" "\n") (re.range "\r" "\r") (str.to.re " ")) ))) (re.+ (re.union (re.range "\t" "\t") (re.range "\n" "\n") (re.range "\r" "\r") (str.to.re " ")) ) )
suffix :SmtNode{intersectionRegexes=[@]}
suffix : (str.to.re "\x40")