Vulnerable
Attack String :"trident\u0000"+"\u0000rv\tA"*5000+"\n~\n~\n"
prefix :SmtNode{intersectionRegexes=[((trident))(.+)]}
prefix : (re.++  (re.++  (str.to.re "\x74") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x6e")  (str.to.re "\x74"))))))) (re.+ re.allchar ))
infix :SmtNode{intersectionRegexes=[(.+)([\.\w]+), (.+)(rv[\s:])([\.\w]+)]}
infix :(re.inter  (re.++ (re.+ re.allchar ) (re.+  (re.union  (str.to.re "\x5c\x2e") (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re "_"))) ))  (re.++ (re.+ re.allchar ) (re.++  (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x76")  (re.union (re.union (str.to.re "\t") (str.to.re "\n") (str.to.re "\r") (str.to.re " "))  (str.to.re "\x3a")))) (re.+  (re.union  (str.to.re "\x5c\x2e") (re.union (re.range "a" "z") (re.range "A" "Z") (re.range "0" "9") (str.to.re "_"))) ))) )
suffix :SmtNode{intersectionRegexes=[
~
~
]}
suffix : (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x7e") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x7e")  (str.to.re "\x0a")))))