Vulnerable
Attack String :"trident\u0000"+"\u0000rv\t.\u0000"*5000+"\n~\n~\n"
prefix :SmtNode{intersectionRegexes=[((trident))(.+)]}
prefix : (re.++  (re.++  (str.to.re "\x74") (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x69") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x6e")  (str.to.re "\x74"))))))) (re.+ re.allchar ))
infix :SmtNode{intersectionRegexes=[([^
]+)&(([^
]+)(rv([ 
	]|:)((\.|[A-Za-z0-9_])+))([^
]+))&([^
]+)&(.+)]}
infix : (re.++ (re.+  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.+  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (re.++  (str.to.re "\x72") (re.++  (str.to.re "\x76") (re.++  (re.union  (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x0a") (re.union  (str.to.re "\x0d") (re.union  (str.to.re "\x09")  (str.to.re "\x0b"))))))  (str.to.re "\x3a")) (re.+  (re.union  (str.to.re "\x5c\x2e")  (re.union (re.range "\x41" "\x5a") (re.union (re.range "\x61" "\x7a") (re.union (re.range "\x30" "\x39")  (str.to.re "\x5f"))))) )))) (re.+  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ))) (re.++  (str.to.re "\x26") (re.++ (re.+  (re.union  (str.to.re "\x0a")  (str.to.re "\x0d")) ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[
~
~
]}
suffix : (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x7e") (re.++  (str.to.re "\x0a") (re.++  (str.to.re "\x7e")  (str.to.re "\x0a")))))