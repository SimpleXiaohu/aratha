Vulnerable
Attack String :"@(\u0000)\n\r"+"\r\n"*32+":A:"
prefix :SmtNode{intersectionRegexes=[((@\(([^"\n\/\r):]+)(\/[rst$uLn]*)?\).*(\r?\n|\r)))(.*(\r?\n|\r))]}
prefix : (re.++  (re.++  (str.to.re "\x40") (re.++  (str.to.re "\x5c\x28") (re.++ (re.+  (re.union  (str.to.re "\x22") (re.union  (str.to.re "\x5c\x6e") (re.union  (str.to.re "\x5c\x2f") (re.union  (str.to.re "\x5c\x72") (re.union  (str.to.re "\x29")  (str.to.re "\x3a")))))) ) (re.++ (re.opt  (re.++  (str.to.re "\x5c\x2f") (re.*  (re.union  (str.to.re "\x72") (re.union  (str.to.re "\x73") (re.union  (str.to.re "\x74") (re.union  (str.to.re "\x24") (re.union  (str.to.re "\x75") (re.union  (str.to.re "\x4c")  (str.to.re "\x6e"))))))) )) ) (re.++  (str.to.re "\x5c\x29") (re.++ (re.* re.allchar )  (re.union  (re.++ (re.opt  (str.to.re "\x5c\x72") )  (str.to.re "\x5c\x6e"))  (str.to.re "\x5c\x72"))))))))  (re.++ (re.* re.allchar )  (re.union  (re.++ (re.opt  (str.to.re "\x5c\x72") )  (str.to.re "\x5c\x6e"))  (str.to.re "\x5c\x72"))))
infix :SmtNode{intersectionRegexes=[.*], next=SmtNode{intersectionRegexes=[(()+(?
)+)&((?
)+)&(.*)&(.{0,})], next=SmtNode{intersectionRegexes=[()&(.{0,})]}}}
infix :(re.* re.allchar )  (re.++  (re.++ (re.+  (str.to.re "\x0d") ) (re.+  (re.++ (re.opt  (str.to.re "\x0d") )  (str.to.re "\x0a")) )) (re.++  (str.to.re "\x26") (re.++ (re.+  (re.++ (re.opt  (str.to.re "\x0d") )  (str.to.re "\x0a")) ) (re.++  (str.to.re "\x26") (re.++  (re.++  (str.to.re "\x0d") (re.* re.allchar )) (re.++  (str.to.re "\x26")  (re.++ "" (re.* "" ))))))))  (re.++  (re.++  (str.to.re "\x26")  (re.++ "" (re.* "" ))))
suffix :SmtNode{intersectionRegexes=[:A:]}
suffix : (re.++  (str.to.re "\x3a") (re.++  (str.to.re "\x41")  (str.to.re "\x3a")))