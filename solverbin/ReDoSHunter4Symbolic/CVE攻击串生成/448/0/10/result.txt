Vulnerable
Attack String :";Ideos "+"\t"*10000+"◎;!◎;!"
prefix :SmtNode{intersectionRegexes=[;Ideos ]}
prefix : (re.++  (str.to.re "\x3b") (re.++  (str.to.re "\x49") (re.++  (str.to.re "\x64") (re.++  (str.to.re "\x65") (re.++  (str.to.re "\x6f") (re.++  (str.to.re "\x73")  (str.to.re "\x20")))))))
infix :SmtNode{intersectionRegexes=[([^\/;]+)&(([^\/;]+)()([ 
	]*))&([ 
	]*)&(.+)]}
infix : (re.++ (re.+  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) ) (re.++  (str.to.re "\x26") (re.++  (re.++ (re.+  (re.union  (str.to.re "\x5c\x2f")  (str.to.re "\x3b")) ) (re.++  (re.*  (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x0a") (re.union  (str.to.re "\x0d") (re.union  (str.to.re "\x09")  (str.to.re "\x0b")))))) ))) (re.++  (str.to.re "\x26") (re.++ (re.*  (re.union  (str.to.re "\x0c") (re.union  (str.to.re "\x20") (re.union  (str.to.re "\x0a") (re.union  (str.to.re "\x0d") (re.union  (str.to.re "\x09")  (str.to.re "\x0b")))))) ) (re.++  (str.to.re "\x26") (re.+ re.allchar )))))))
suffix :SmtNode{intersectionRegexes=[◎;!◎;!]}
suffix : (re.++  (str.to.re "\x25ce") (re.++  (str.to.re "\x3b") (re.++  (str.to.re "\x21") (re.++  (str.to.re "\x25ce") (re.++  (str.to.re "\x3b")  (str.to.re "\x21"))))))